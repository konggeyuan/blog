<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>科幻小说有感</title>
    <url>/2020/03/02/%E7%A7%91%E5%B9%BB%E5%B0%8F%E8%AF%B4%E6%9C%89%E6%84%9F/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>肺炎肆虐了几个月，也终有有点时间看看所谓的闲书。当然其实也是排除一些焦躁。</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title>FFmpeg常用基本命令</title>
    <url>/2020/03/02/ffmpeg%E5%B8%B8%E7%94%A8%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:16 GMT+0800 (GMT+08:00) --><p>FFmpeg常用基本命令</p><h4 id="常用参数说明"><a href="#常用参数说明" class="headerlink" title="常用参数说明"></a>常用参数说明</h4><h5 id="主要参数"><a href="#主要参数" class="headerlink" title="主要参数"></a>主要参数</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-i 设定输入流 </span><br><span class="line">-f 设定输出格式 </span><br><span class="line">-ss 开始时间 </span><br><span class="line">视频参数： -b </span><br><span class="line">设定视频流量，默认为200Kbit/s </span><br><span class="line">-r 设定帧速率，默认为25 </span><br><span class="line">-s 设定画面的宽与高 </span><br><span class="line">-aspect 设定画面的比例 </span><br><span class="line">-vn 不处理视频 </span><br><span class="line">-vcodec 设定视频编解码器，未设定时则使用与输入流相同的编解码器 </span><br><span class="line">音频参数： -ar 设定采样率 </span><br><span class="line">-ac 设定声音的Channel数 </span><br><span class="line">-acodec 设定声音编解码器，未设定时则使用与输入流相同的编解码器 </span><br><span class="line">-an 不处理音频</span><br></pre></td></tr></table></figure><h4 id="手头常用"><a href="#手头常用" class="headerlink" title="手头常用"></a>手头常用</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//按照固定高宽截取</span><br><span class="line">//宽：1202</span><br><span class="line">//高：677</span><br><span class="line">//0 左右要去掉宽度</span><br><span class="line">//130 上下要去掉的宽度</span><br><span class="line"></span><br><span class="line">ffmpeg -i video.mp4  -vf crop=1202:677:0:130  -c:a copy video3.mp4</span><br><span class="line"></span><br><span class="line">//截取部分时间</span><br><span class="line">//-ss 开始时间</span><br><span class="line">//-t 结束时间</span><br><span class="line"></span><br><span class="line">ffmpeg -ss 00:00:09 -t 00:02:13 -i ScreenFlow11.mp4 -vcodec copy -acodec copy t.mp4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//转大小 iphone max</span><br><span class="line">ffmpeg -i EP02.mp4 -strict -2 -vf scale=1242:-2 2.mp4</span><br><span class="line"></span><br><span class="line">//转720p</span><br><span class="line">ffmpeg -i EP02.mp4 -strict -2 -vf scale=-2:720 2.mp4</span><br><span class="line"></span><br><span class="line">//640x480</span><br><span class="line">ffmpeg -i input.avi -s 640x480 output.avi</span><br><span class="line"></span><br><span class="line">//vga分辨率</span><br><span class="line">ffmpeg -i input.avi -strict -2 -s vga output.avi</span><br><span class="line"></span><br><span class="line">//字幕导入</span><br><span class="line">ffmpeg -i 1.mkv  -metadata title=<span class="string">"步履不停"</span>  -strict -2  \</span><br><span class="line">vf subtitles=1.srt  -metadata:s:s:0 language=chs  out.mp4</span><br><span class="line"></span><br><span class="line">//从mkv转MP4，并用mkv中的中文字幕和视频音频合成</span><br><span class="line">ffmpeg -i input.mkv -filter_complex <span class="string">"[0:v:0]subtitles=input.mkv:si=5[v]"</span> \</span><br><span class="line">metadata title=<span class="string">"星球大战4新希望"</span> -map <span class="string">"[v]"</span> -map 0:a:0 -c:a copy output.mp4</span><br></pre></td></tr></table></figure><h4 id="常规使用组合"><a href="#常规使用组合" class="headerlink" title="常规使用组合"></a>常规使用组合</h4><h5 id="分离视频音频流"><a href="#分离视频音频流" class="headerlink" title="分离视频音频流"></a>分离视频音频流</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//分离视频流</span><br><span class="line">ffmpeg -i input_file -vcodec copy -an output_file_video　　</span><br><span class="line">ffmpeg -i input_file -acodec copy -vn output_file_audio</span><br></pre></td></tr></table></figure><h5 id="视频解复用"><a href="#视频解复用" class="headerlink" title="视频解复用"></a>视频解复用</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//分离音频流</span><br><span class="line">ffmpeg –i test.mp4 –vcodec copy –an –f m4v test.264</span><br><span class="line">ffmpeg –i test.avi –vcodec copy –an –f m4v test.264</span><br></pre></td></tr></table></figure><h5 id="视频转码"><a href="#视频转码" class="headerlink" title="视频转码"></a>视频转码</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//转码为码流原始文件</span><br><span class="line">ffmpeg –i test.mp4 –vcodec h264 –s 352*278 –an –f m4v test.264  </span><br><span class="line"></span><br><span class="line">//转码为码流原始文件</span><br><span class="line">ffmpeg –i test.mp4 –vcodec h264 –bf 0 –g 25 –s 352*278 –an –f m4v test.264</span><br><span class="line"></span><br><span class="line">//转码为封装文件</span><br><span class="line">//-bf B帧数目控制，-g 关键帧间隔控制，-s 分辨率控制</span><br><span class="line">ffmpeg –i test.avi -vcodec mpeg4 –vtag xvid –qsame test_xvid.avi</span><br></pre></td></tr></table></figure><h5 id="视频封装"><a href="#视频封装" class="headerlink" title="视频封装"></a>视频封装</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg –i video_file –i audio_file –vcodec copy –acodec copy output_file</span><br></pre></td></tr></table></figure><h5 id="视频剪切"><a href="#视频剪切" class="headerlink" title="视频剪切"></a>视频剪切</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//提取图片</span><br><span class="line">ffmpeg –i test.avi –r 1 –f image2 image-%3d.jpeg</span><br><span class="line"></span><br><span class="line">//剪切视频</span><br><span class="line">//-r 提取图像的频率，-ss 开始时间，-t 持续时间</span><br><span class="line">ffmpeg -ss 0:1:30 -t 0:0:20 -i input.avi -vcodec copy -acodec copy output.avi</span><br></pre></td></tr></table></figure><h5 id="视频录制"><a href="#视频录制" class="headerlink" title="视频录制"></a>视频录制</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg –i rtsp://192.168.3.205:5555/<span class="built_in">test</span> –vcodec copy out.avi</span><br></pre></td></tr></table></figure><h5 id="抓屏"><a href="#抓屏" class="headerlink" title="抓屏"></a>抓屏</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ffmpeg -f gdigrab -i desktop out.mpg </span><br><span class="line"></span><br><span class="line">//从屏幕的（10,20）点处开始，抓取640x480的屏幕，设定帧率为5 ：</span><br><span class="line">ffmpeg -f gdigrab -framerate 5 -offset_x 10 -offset_y 20 -video_size 640x480 -i desktop out.mpg </span><br><span class="line"></span><br><span class="line">//ffmpeg从视频中生成gif图片：</span><br><span class="line">ffmpeg -i capx.mp4 -t 10 -s 320x240 -pix_fmt rgb24 jidu1.gif</span><br></pre></td></tr></table></figure><h5 id="格式转换"><a href="#格式转换" class="headerlink" title="格式转换"></a>格式转换</h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//M2TS TO MP4</span><br><span class="line">ffmpeg -i input.m2ts -vcodec libx264 -crf 20 -acodec ac3 -vf <span class="string">"yadif"</span> output.mp4</span><br><span class="line"></span><br><span class="line">//MP4 TO WEBM (HIGH)</span><br><span class="line">ffmpeg -i input.mp4 -aq 5 -ac 2 -qmax 25 -threads 2 output.webm</span><br><span class="line"></span><br><span class="line">//MP4 TO WEBM (MEDIUM)</span><br><span class="line">ffmpeg -i input.mp4 -aq 5 -ac 2 -qmax 35 -threads 2 output.webm</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ffmpeg</tag>
        <tag>视频转码</tag>
      </tags>
  </entry>
  <entry>
    <title>laravel 数据库查询器</title>
    <url>/2020/03/01/laravel-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E5%99%A8/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>插入数据库</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Companyauth::insert($data);</span><br></pre></td></tr></table></figure><p>更新</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Companyauth::where(&#39;uid&#39;,$uid)-&gt;update($data);</span><br></pre></td></tr></table></figure><p>查询</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Companyauth::where(&#39;uid&#39;,$uid)-&gt;find(1);</span><br></pre></td></tr></table></figure><p>orderBy和limit组合</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Companyauth::orderBy(&#39;id&#39;,&#39;desc&#39;)-&gt;take(6)-&gt;get();</span><br></pre></td></tr></table></figure><p>where条件</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Newsinformation::where(&#39;id&#39;,&#39;&lt;&#39;,$id)-&gt;first();</span><br><span class="line">Orderbook::where(&#39;buyId&#39;,$uid)-&gt;get();</span><br></pre></td></tr></table></figure><p>left join</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$prdList &#x3D; Product::where(&#39;product.type&#39;,2)</span><br><span class="line">                -&gt;leftjoin(&#39;companyauth&#39;,&#39;companyauth.uid&#39;,&#39;&#x3D;&#39;,&#39;product.uid&#39;)</span><br><span class="line">                -&gt;orderBy(&#39;product.id&#39;,&#39;desc&#39;)-&gt;get();</span><br></pre></td></tr></table></figure><p>从配置文件读取数据</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$choiseType &#x3D; Config::get(&#39;user.choicetype&#39;);</span><br></pre></td></tr></table></figure><p>单一纪录</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Newsinformation::where(&#39;id&#39;,&#39;&lt;&#39;,$id)-&gt;first();</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>laravel</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs 常驻后台 pm2 使用</title>
    <url>/2020/03/01/nodejs-%E5%B8%B8%E9%A9%BB%E5%90%8E%E5%8F%B0-pm2-%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><h4 id="什么是pm2"><a href="#什么是pm2" class="headerlink" title="什么是pm2"></a>什么是pm2</h4><p>pm2是一个用node编写的进程管理工具，它不仅可以用来管理node进程，任何进程相关的东西都可以使用pm2来进行管理</p><h5 id="安装pm2"><a href="#安装pm2" class="headerlink" title="安装pm2"></a>安装pm2</h5><p>npm install pm2</p><h5 id="常规使用"><a href="#常规使用" class="headerlink" title="常规使用"></a>常规使用</h5><p>开启进程</p><p>pm2 start app.js</p><p>pm2 list 查看当前被pm2所管理的进程</p><p><img src="/images/pasted-18.png" alt="upload successful"></p><p>查看日志<br>pm2 log</p><p>关闭所有进程<br>pm2 stop all</p><p>重新加载进程<br>pm2 reload app_name</p><p>删除进程<br>pm2 delete app_name</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title>多个ssh key配置</title>
    <url>/2020/03/01/%E5%A4%9A%E4%B8%AAssh-key%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>生成新的key</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -f ~&#x2F;.ssh&#x2F;id_rsa.github -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>修改ssh的配置文件，如果没有就新建一个</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vim ~&#x2F;.ssh&#x2F;config</span><br></pre></td></tr></table></figure><p>配置不同的key指向不同的git仓库服务器</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#github</span><br><span class="line">   Host github.com</span><br><span class="line">        HostName github.com</span><br><span class="line">        PreferredAuthentications publickey</span><br><span class="line">        IdentityFile ~&#x2F;.ssh&#x2F;id_rsa.blog.github</span><br><span class="line">#gitee</span><br><span class="line">   Host gitee.com</span><br><span class="line">        HostName gitee.com</span><br><span class="line">        PreferredAuthentications publickey</span><br><span class="line">        IdentityFile ~&#x2F;.ssh&#x2F;id_rsa</span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL备份脚本</title>
    <url>/2020/03/01/MySQL%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:16 GMT+0800 (GMT+08:00) --><p>云主机厂商都有自己的RDS系统，自然那是万无一失，但费用可真不便宜，一般还是喜欢自己备份一下。这里是一段备份脚本。放在cron中自动执行。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#备份目录</span></span><br><span class="line">BACKUP_ROOT=/srv/backup</span><br><span class="line">BACKUP_FILEDIR=<span class="variable">$BACKUP_ROOT</span>/files</span><br><span class="line">BACKUP_LOGDIR=<span class="variable">$BACKUP_ROOT</span>/logs</span><br><span class="line"></span><br><span class="line"><span class="comment">#当前日期</span></span><br><span class="line">DATE=$(date +%Y%m%d)</span><br><span class="line">FILEEXT=$(date +%Y%m%d%H)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d <span class="variable">$BACKUP_FILEDIR</span>/<span class="variable">$DATE</span> ];<span class="keyword">then</span></span><br><span class="line">    mkdir <span class="variable">$BACKUP_FILEDIR</span>/<span class="variable">$DATE</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment">######备份######</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查询所有数据库</span></span><br><span class="line"></span><br><span class="line">DATABASES=$(mysql -u用户名 -h 网络IP -p密码 -e <span class="string">"show databases"</span> | grep -Ev <span class="string">"Database|sys|information_schema"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#echo $DATABASES</span></span><br><span class="line"><span class="comment">#循环数据库进行备份</span></span><br><span class="line"><span class="keyword">for</span> db <span class="keyword">in</span> <span class="variable">$DATABASES</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> </span><br><span class="line">    <span class="built_in">echo</span> ----------<span class="variable">$BACKUP_FILEDIR</span>/<span class="variable">$DATE</span>/<span class="variable">$&#123;db&#125;</span>_<span class="variable">$FILEEXT</span>.sql.gz BEGIN----------</span><br><span class="line">    mysqldump -u用户名 -h 网络IP -p密码  \</span><br><span class="line">    --default-character-set=utf8 -q --lock-all-tables \</span><br><span class="line">    --flush-logs -E -R --triggers -B <span class="variable">$&#123;db&#125;</span>  \</span><br><span class="line">    | gzip &gt; <span class="variable">$BACKUP_FILEDIR</span>/<span class="variable">$DATE</span>/<span class="variable">$&#123;db&#125;</span>_<span class="variable">$FILEEX</span></span><br><span class="line">T.sql.gz</span><br><span class="line">    <span class="built_in">echo</span> ----------<span class="variable">$BACKUP_FILEDIR</span>/<span class="variable">$DATE</span>/<span class="variable">$&#123;db&#125;</span>_<span class="variable">$FILEEXT</span>.sql.gz COMPLETE----------</span><br><span class="line">    <span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"done"</span></span><br></pre></td></tr></table></figure><p>cron中设置备份频段，建议再加上远程传输，做成异地备份</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>数据备份</tag>
      </tags>
  </entry>
  <entry>
    <title>mac 多版本php共存</title>
    <url>/2020/02/29/mac-%E5%A4%9A%E7%89%88%E6%9C%ACphp%E5%85%B1%E5%AD%98/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>MAC上安装有多个不同的PHP网站，要求必须在PHP5.6、PHP7.1+，并且需要安装xdebug扩展。</p><p>操作</p><p>1）先安装PHP56 PHP71</p><figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">brew install php@5.6</span><br><span class="line">brew install php@7.3</span><br></pre></td></tr></table></figure><p>安装好之后，去修改他们php-fpm的绑定端口，然后执行brew services restart <a href="mailto:php@5.6">php@5.6</a> 这样，启动</p><p>2）安装扩展</p><p>必须确认目录是否存在 /usr/local/lib/php/pecl</p><figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">/usr/<span class="built_in">local</span>/opt/php@7.1/bin/pecl install http://pecl.php.net/get/xdebug-2.9.2.tgz</span><br><span class="line">/usr/<span class="built_in">local</span>/opt/php@5.6/bin/pecl install http://pecl.php.net/get/xdebug-2.5.5.tgz</span><br></pre></td></tr></table></figure><p>3）修改对应的php.ini</p><p>添加extension扩展so</p><p>4）修改php-fpm端口<br><a href="http://www.conf" target="_blank" rel="noopener">www.conf</a></p><p>listening 端口</p><p>5）启动服务</p><figure class="highlight zsh"><table><tr><td class="code"><pre><span class="line">brew services restart php@5.6 </span><br><span class="line">brew services restart php@7.1</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo server状态怎么常驻后台</title>
    <url>/2020/02/29/hexo-server%E7%8A%B6%E6%80%81%E6%80%8E%E4%B9%88%E5%B8%B8%E9%A9%BB%E5%90%8E%E5%8F%B0/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:16 GMT+0800 (GMT+08:00) --><p>刚刚批发学来，转载一下</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#安装pm2</span></span><br><span class="line">npm  install -g pm2</span><br></pre></td></tr></table></figure><p>在博客根目录下面创建一个hexo_run.js</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//run</span></span><br><span class="line"><span class="keyword">const</span> &#123; exec &#125; = <span class="built_in">require</span>(<span class="string">'child_process'</span>)</span><br><span class="line">exec(<span class="string">'hexo server'</span>,(error, stdout, stderr) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(error)&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">'exec error: $&#123;error&#125;'</span>)</span><br><span class="line">                <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'stdout: $&#123;stdout&#125;'</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">'stderr: $&#123;stderr&#125;'</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>运行脚本</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pm2 start hexo_run.js</span><br></pre></td></tr></table></figure><p>转载地址：<a href="https://blog.csdn.net/Tangcuyuha/article/details/80331169" target="_blank" rel="noopener">https://blog.csdn.net/Tangcuyuha/article/details/80331169</a></p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title>Node.js 事件驱动模型</title>
    <url>/2019/12/02/Node-js-%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E6%A8%A1%E5%9E%8B/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:16 GMT+0800 (GMT+08:00) --><p><img src="/images/pasted-17.png" alt="upload successful"></p><p>运行过程</p><h4 id="主线程"><a href="#主线程" class="headerlink" title="主线程"></a>主线程</h4><ol><li>执行 node 代码，将代码加入队列中</li><li>执行同步操作代码</li><li>同步执行完成后，执行异步代码</li><li>异步分为两种<ol><li>IO1：会从线程池取一条子线程来帮助主线程执行</li><li>非IO2 ： 判断能否执行，能执行加入队列，不能就跳过</li></ol></li><li>主线程会一直循环，直到队列中没有代码后，主线程才会退出</li></ol><p>1) IO 即 input 和 out，指有数据操作</p><p>2) 无数据操作，例如定时器 setTimeOut()</p><h4 id="子线程"><a href="#子线程" class="headerlink" title="子线程"></a>子线程</h4><p>主要用来执行异步操作</p><ol><li>无任务时放在线程池中休息</li><li>有异步IO操作，执行异步的IO操作</li><li>执行完成后的子线程会把IO操作的回调，扔回给队列</li></ol><!-- rebuild by neat -->]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>微信小程序-常用自定义函数</title>
    <url>/2019/09/25/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%B8%B8%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>ajax</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> ajaxPromisify = <span class="function"><span class="keyword">function</span>(<span class="params">options=&#123;&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">      wx.showLoading(&#123;<span class="attr">title</span>: <span class="string">'加载中'</span>&#125;);</span><br><span class="line">      wx.request(&#123;</span><br><span class="line">        url: options.url,</span><br><span class="line">        method: options.method,</span><br><span class="line">        data: options.data,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">          wx.hideLoading();</span><br><span class="line">          resolve(res);</span><br><span class="line">        &#125;,</span><br><span class="line">        fail:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">          reject(res);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>用户认证信息获取，没有获取到就弹框</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> userPromisify = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">      wx.getUserInfo(&#123;</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">          resolve(res);</span><br><span class="line">        &#125;,</span><br><span class="line">        withCredentials:<span class="literal">true</span>,</span><br><span class="line">        fail:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">          reject(res);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>微信登陆</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> wxLogin = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">      wx.login(&#123;</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">          resolve(res);</span><br><span class="line">        &#125;,</span><br><span class="line">        withCredentials:<span class="literal">true</span>,</span><br><span class="line">        fail:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</span><br><span class="line">          reject(res);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>判断某些权限是否获取到</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> authSettingPromisify = <span class="function"><span class="keyword">function</span>(<span class="params">authtype</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>) =&gt;</span> &#123;</span><br><span class="line">      wx.getSetting(&#123;</span><br><span class="line">        success(res) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!res.authSetting[authtype]) &#123;</span><br><span class="line">                resolve(<span class="literal">false</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                resolve(<span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        fail(err) &#123;</span><br><span class="line">            reject(err);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-跳转-本地获取存储-手机号验证</title>
    <url>/2019/09/24/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%B7%B3%E8%BD%AC-%E8%8E%B7%E5%8F%96%E5%AD%98%E5%82%A8/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>获取本地存储</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//获取本地存储</span></span><br><span class="line">wx.getStorageSync(<span class="string">"SysInfo"</span>).permission.title;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置本地存储</span></span><br><span class="line">wx.setStorageSync(<span class="string">"UserID"</span>, data.data.user_id);</span><br></pre></td></tr></table></figure><p>跳转</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//直接跳转并不删除当前页面</span></span><br><span class="line">wx.navigateTo(&#123;<span class="string">'url'</span>:<span class="string">'/pages/shop/c/register/register'</span>&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除当前页面并跳转</span></span><br><span class="line">wx.redirectTo(&#123;<span class="string">'url'</span>:<span class="string">'/pages/shop/c/register/register'</span>&#125;);</span><br></pre></td></tr></table></figure><p>手机号验证</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> phoneVerification = <span class="function"><span class="keyword">function</span>(<span class="params">phone</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> reg = <span class="regexp">/^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;)|(17[0-9]&#123;1&#125;))+\d&#123;8&#125;)$/</span>;</span><br><span class="line">  <span class="keyword">return</span> reg.test(phone);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-弹框插件</title>
    <url>/2019/09/24/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%BC%B9%E6%A1%86/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 下载</span></span><br><span class="line">git clone git@github.com:konggeyuan/popup.git</span><br><span class="line"></span><br><span class="line"><span class="comment">//json文件定义</span></span><br><span class="line"><span class="string">"usingComponents"</span>: &#123;</span><br><span class="line">  <span class="string">"zx-popup"</span>: <span class="string">"/components/zx-popup/index"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//页面</span></span><br><span class="line">&lt;button bindtap=<span class="string">"bottomPop"</span>&gt;显示bottom弹框&lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/弹框界面</span></span><br><span class="line"><span class="regexp">&lt;zx-popup popup-visible="&#123;&#123; bottom &#125;&#125;" zx-position="&#123;&#123;'bottom'&#125;&#125;" bind:popupStatus="popupChange"&gt;</span></span><br><span class="line"><span class="regexp">  &lt;view class="wrap bottom"&gt;显示bottom弹框&lt;/</span>view&gt;</span><br><span class="line">&lt;<span class="regexp">/zx-popup&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/调用</span></span><br><span class="line"><span class="regexp">bottomPop() &#123;</span></span><br><span class="line"><span class="regexp">  this.setData(&#123;</span></span><br><span class="line"><span class="regexp">    bottom: true</span></span><br><span class="line"><span class="regexp">  &#125;);</span></span><br><span class="line"><span class="regexp">&#125;,</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/</span><span class="regexp">/状态events</span></span><br><span class="line"><span class="regexp">popupChange() &#123;</span></span><br><span class="line"><span class="regexp">  console.log(this.data.bottom);</span></span><br><span class="line"><span class="regexp">&#125;,</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序-环境标题设置</title>
    <url>/2019/09/24/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E7%8E%AF%E5%A2%83%E6%A0%87%E9%A2%98%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//首页标题</span></span><br><span class="line">data = &#123;<span class="string">"type"</span>:<span class="string">"title"</span>,<span class="string">"position"</span>:&#123;<span class="string">"type"</span>:<span class="string">"wx-title"</span>,<span class="string">"value"</span>:<span class="string">"user"</span>&#125;&#125;;</span><br><span class="line"> wx.request(&#123;</span><br><span class="line">  method:<span class="string">'POST'</span>,</span><br><span class="line">  url: utils.restfulUrl+<span class="string">"layout"</span>,</span><br><span class="line">  data: <span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">   success: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">     that.setData(&#123; <span class="attr">title</span>: data.data[<span class="number">0</span>].title || [] &#125;);</span><br><span class="line">     wx.setNavigationBarTitle(&#123;<span class="attr">title</span>: data.data[<span class="number">0</span>].title&#125;);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'列表导航'</span>);</span><br><span class="line">data = &#123;<span class="string">"type"</span>:<span class="string">"title"</span>,<span class="string">"position"</span>:&#123;<span class="string">"type"</span>:<span class="string">"wx-nav-user"</span>&#125;&#125;;</span><br><span class="line">wx.request(&#123;</span><br><span class="line">  method:<span class="string">'POST'</span>,</span><br><span class="line">  url: utils.restfulUrl+<span class="string">"layout"</span>,</span><br><span class="line">  data: <span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">  success: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">     <span class="comment">// console.log(data.data);</span></span><br><span class="line">     that.setData(&#123; <span class="attr">subObj</span>: data.data || [] &#125;);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//首页标题</span></span><br><span class="line">data = &#123;<span class="string">"type"</span>:<span class="string">"title"</span>,<span class="string">"position"</span>:&#123;<span class="string">"type"</span>:<span class="string">"wx-title"</span>,<span class="string">"value"</span>:<span class="string">"user"</span>&#125;&#125;;</span><br><span class="line"> wx.request(&#123;</span><br><span class="line">  method:<span class="string">'POST'</span>,</span><br><span class="line">  url: utils.restfulUrl+<span class="string">"layout"</span>,</span><br><span class="line">  data: <span class="built_in">JSON</span>.stringify(data),</span><br><span class="line">   success: <span class="function">(<span class="params">&#123; data &#125;</span>) =&gt;</span> &#123;</span><br><span class="line">     that.setData(&#123; <span class="attr">title</span>: data.data[<span class="number">0</span>].title || [] &#125;);</span><br><span class="line">     wx.setNavigationBarTitle(&#123;<span class="attr">title</span>: data.data[<span class="number">0</span>].title&#125;);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"> <span class="comment">// 用户是否登陆</span></span><br><span class="line"><span class="keyword">let</span> userObj = wx.getStorageSync(<span class="string">"user_info"</span>) || <span class="literal">false</span>;</span><br><span class="line">that.setData(&#123;<span class="attr">userObj</span>:userObj&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">appInstance.loginStat();</span><br><span class="line">console.log(&#39;登陆状态&#39;);</span><br><span class="line"></span><br><span class="line">appInstance.sysInfo();</span><br><span class="line">console.log(&#39;系统环境信息&#39;);</span><br><span class="line"></span><br><span class="line">appInstance.tabBar();</span><br><span class="line">console.log(&#39;底部导航&#39;);</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>layui常用部件</title>
    <url>/2019/09/12/layui-table%E5%B8%B8%E7%94%A8/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>静态表格</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">lay-size</span>=<span class="string">"sm"</span> <span class="attr">class</span>=<span class="string">"layui-table"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 定义单元格高宽 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">col</span> <span class="attr">width</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">col</span> <span class="attr">width</span>=<span class="string">"300"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">col</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 定义第一行高宽 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>&#123;$lang.card_sn&#125;<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>&#123;$lang.user_phone&#125;<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- &#123;foreach from=$cards item=card&#125; --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>form表单</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!--文本框--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"points"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">""</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">class</span>=<span class="string">"layui-input"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--文本域--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"desc"</span> <span class="attr">placeholder</span>=<span class="string">"请输入内容"</span> <span class="attr">class</span>=<span class="string">"layui-textarea"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--加按钮标记的图标--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">"card_edit"</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"layui-btn layui-btn-sm layui-bg-cyan"</span> <span class="attr">title</span>=<span class="string">"&#123;$lang.edit&#125;"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"layui-icon"</span>&gt;</span>&amp;#xe642;<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">layui-btn-normal 普通蓝色按钮</span><br><span class="line">layui-btn-danger 红色警告按钮</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>layui</tag>
      </tags>
  </entry>
  <entry>
    <title>laravel 数据库查询器常用</title>
    <url>/2019/09/11/laravel%E6%9F%A5%E8%AF%A2%E5%99%A8/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>连表查询、排序</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$fields = [</span><br><span class="line"><span class="string">'op.id'</span>,<span class="string">'op.product_id'</span>,<span class="string">'op.product_number as num'</span>,</span><br><span class="line"><span class="string">'pd.image'</span>,<span class="string">'op.name'</span>,<span class="string">'op.order_id'</span></span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">DB::table(<span class="string">'order_product as op'</span>)</span><br><span class="line">    -&gt;select($fields)</span><br><span class="line">    -&gt;leftJoin(<span class="string">'product as pd'</span>, <span class="string">'pd.id'</span>, <span class="string">'='</span>, <span class="string">'op.product_id'</span>)</span><br><span class="line">    -&gt;where(<span class="string">'op.order_id'</span>,$orderId)</span><br><span class="line">    -&gt;orderBy(<span class="string">'id'</span>,<span class="string">'desc'</span>)</span><br><span class="line">    -&gt;limit(<span class="number">6</span>)</span><br><span class="line">    -&gt;get();</span><br></pre></td></tr></table></figure><p>单一查询</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">DB::table(<span class="string">'video'</span>)-&gt;select($fields)</span><br><span class="line">    -&gt;where(<span class="string">'id'</span>,$vid)</span><br><span class="line">    -&gt;first();</span><br></pre></td></tr></table></figure><p>自减</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">DB::table(<span class="string">'product'</span>)</span><br><span class="line">    -&gt;where(<span class="string">'id'</span>,$pid)</span><br><span class="line">    -&gt;decrement(<span class="string">'gift_amount'</span>,$num);</span><br></pre></td></tr></table></figure><p>更新</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">DB::table(<span class="string">'product'</span>)</span><br><span class="line">    -&gt;where(<span class="string">'id'</span>,$pid)</span><br><span class="line">    -&gt;where(<span class="string">'amount'</span>,<span class="string">'&lt;='</span>,<span class="number">0</span>)</span><br><span class="line">    -&gt;update($fields);</span><br></pre></td></tr></table></figure><p>添加返回id</p><pre><code class="php">DB::table(<span class="string">'comment'</span>)
    -&gt;insertGetId($fields);
</code></pre><!-- rebuild by neat -->]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>laravel</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>js操作json的常用函数</title>
    <url>/2019/09/05/js%E6%93%8D%E4%BD%9Cjson%E7%9A%84%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>JSON.stringify() 从一个对象中解析出字符串</p><p>JSON.stringify({“a”:”1”,”b”:”2”})</p><p>结果是：”{“a”:”1”,”b”:”2”}”</p><p>JSON.parse()从一个字符串中解析出JSON对象</p><p>var str = ‘{“a”:”1”,”b”:”2”}’;</p><p>JSON.parse(str);</p><p>结果是：Object{a:”1”,b:”2”}</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>前端</category>
      </categories>
  </entry>
  <entry>
    <title>mysql 随机数&amp;日常用户序列号</title>
    <url>/2019/09/05/mysql-%E9%9A%8F%E6%9C%BA%E6%95%B0-%E6%97%A5%E5%B8%B8%E7%94%A8%E6%88%B7%E5%BA%8F%E5%88%97%E5%8F%B7/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>日常随机数</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;产生0到1000间的随机数 </span><br><span class="line">SELECT RAND() * 10000; </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 增加取整</span><br><span class="line">SELECT FLOOR(RAND() * 10000) </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 产生1000-10000间的整形 </span><br><span class="line">SELECT FLOOR( 1000 + RAND() * (10000 - 1000)) </span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 日常用户序列号,头部参数+1000~9999之间的随机数+时间戳，md5后值</span><br><span class="line"></span><br><span class="line">concat(&#39;TZ-&#39;,md5(concat(FLOOR(1000 + RAND() * (10000 - 1000)),UNIX_TIMESTAMP())))</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>随机数</tag>
        <tag>序号生成</tag>
      </tags>
  </entry>
  <entry>
    <title>jquery-ajax常用</title>
    <url>/2019/09/05/jquery-ajax%E5%B8%B8%E7%94%A8/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>与后端交互，直接json串，省去传统的一个个参数post</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 设定json结构</span></span><br><span class="line"><span class="keyword">let</span> postData = &#123;</span><br><span class="line">  <span class="string">"userTel"</span>: $(<span class="string">"#user_info"</span>).val(),</span><br><span class="line">  <span class="string">"cardSN"</span>: cardSN</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成json</span></span><br><span class="line">postData = <span class="built_in">JSON</span>.stringify(postData);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 提交</span></span><br><span class="line">$.ajax(&#123;</span><br><span class="line">  url: URL,</span><br><span class="line">  dataType: <span class="string">"json"</span>,</span><br><span class="line">  type: <span class="string">"post"</span>,</span><br><span class="line">  data:postData,</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 成功返回</span></span><br><span class="line">  success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>php端</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 直接接收</span></span><br><span class="line">data = trim(file_get_contents(<span class="string">'php://input'</span>, <span class="string">'r'</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 解析</span></span><br><span class="line">$data = json_decode($data);</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
  </entry>
  <entry>
    <title>layui&amp;jquery-autocomplete组合</title>
    <url>/2019/09/04/layui-jquery-autocomplete%E7%BB%84%E5%90%88/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>layui与jquery-autocomplete 组合使用中的问题</p><ul><li>载入问题</li></ul><p>远程载入顺序</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 先jquery --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"images/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- layui --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"images/layui/css/layui.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"images/layui/layui.all.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- jquery插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"images/autocomplete/jquery.autocomplete.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/jquery-autocomplete/1.0.7/jquery.auto-complete.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>layui-form表单</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 文本框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"card_sn"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">autocomplete</span>=<span class="string">"off"</span> <span class="attr">class</span>=<span class="string">"layui-input"</span> <span class="attr">lay-verify</span>=<span class="string">"required"</span> <span class="attr">placeholder</span>=<span class="string">"默认提示"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 蓝色普通按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"layui-btn layui-btn-normal"</span> <span class="attr">lay-filter</span>=<span class="string">"card_gen_form"</span> <span class="attr">lay-submit</span>&gt;</span>立即提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>layui表单提交-ajax+msgbox提示</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">layui.use([<span class="string">'jquery'</span>, <span class="string">'layer'</span>,<span class="string">'laydate'</span>,<span class="string">'form'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123; </span><br><span class="line"></span><br><span class="line">    <span class="comment">//日期选择</span></span><br><span class="line">    <span class="keyword">let</span> laydate = layui.laydate;</span><br><span class="line">    laydate.render(&#123;</span><br><span class="line">        elem: <span class="string">'#start_date'</span> <span class="comment">//指定元素</span></span><br><span class="line">    &#125;);</span><br><span class="line">    laydate.render(&#123;</span><br><span class="line">        elem: <span class="string">'#end_date'</span> <span class="comment">//指定元素</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// jquery载入</span></span><br><span class="line">    <span class="keyword">let</span> $ = layui.$      </span><br><span class="line">    <span class="keyword">let</span> Url = <span class="string">'cards.php?rec=gen'</span></span><br><span class="line">    <span class="keyword">let</span> form = layui.form;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ajax提交，msgbox显示</span></span><br><span class="line">    form.on(<span class="string">'submit(card_gen_form)'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// layer.msg(JSON.stringify(data.field));</span></span><br><span class="line">       loading = layer.load(<span class="number">1</span>, &#123;</span><br><span class="line">                    shade: [<span class="number">0.1</span>, <span class="string">'#fff'</span>]</span><br><span class="line">                 &#125;);</span><br><span class="line">        <span class="keyword">let</span> card_gen_config = <span class="built_in">JSON</span>.stringify(data.field);</span><br><span class="line">        </span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            type:<span class="string">"post"</span>,</span><br><span class="line">            url:Url,</span><br><span class="line">            data:card_gen_config,</span><br><span class="line">            dataType:<span class="string">"json"</span>,</span><br><span class="line">            success : <span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">                <span class="comment">// console.log(data.message);</span></span><br><span class="line">                layer.close(loading);</span><br><span class="line">                layer.msg(</span><br><span class="line">                    data.message,&#123;</span><br><span class="line">                        time: <span class="number">2000</span>   </span><br><span class="line">                    &#125;);</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;,</span><br><span class="line">            error:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>jquery-autocomplete需要被layui调用中的修改问题</li></ul><p>打开jquery.autocomplete.js，修改其中的22行，将jquery调用改为用layui中的jquery调用方法</p><p><img src="/images/pasted-15.png" alt="upload successful"></p><p>修改代码如下</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">layui.use([<span class="string">'jquery'</span>], <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    factory(layui.jquery);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>autocomplete插件与layui弹层问题冲突</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*设定z-index置顶*/</span></span><br><span class="line"><span class="selector-class">.ui-front</span> &#123;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">110000003</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>layui&amp;jquery-autocomplete组合调用</li></ul><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">layui.use([<span class="string">'jquery'</span>,<span class="string">'layer'</span>,<span class="string">'form'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 载入jquery</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> $=layui.jquery;</span><br><span class="line">  $(<span class="string">"[id='card_edit']"</span>).on(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">'#user_info'</span>).val(<span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 弹框</span></span><br><span class="line">    <span class="keyword">let</span> user_sel = layer.open(&#123;</span><br><span class="line">                      type: <span class="number">1</span>,</span><br><span class="line">                      title: <span class="string">'手机号&amp;姓名&amp;昵称'</span>,</span><br><span class="line">                      content: $(<span class="string">'#user_sel'</span>)</span><br><span class="line">                    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设定高宽</span></span><br><span class="line">    layer.style(user_sel, &#123;</span><br><span class="line">      width: <span class="string">'400px'</span>,</span><br><span class="line">      height: <span class="string">'200px'</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> <span class="comment">// 文本框输入内容自动检索，每次检索都调用接口</span></span><br><span class="line"> $(<span class="string">"#user_info"</span>).autocomplete(&#123;</span><br><span class="line"></span><br><span class="line">    source: <span class="function"><span class="keyword">function</span>(<span class="params"> request, response </span>) </span>&#123;</span><br><span class="line">      $.ajax(&#123;</span><br><span class="line">        url: <span class="string">"cards.php?rec=search"</span>,</span><br><span class="line">        dataType: <span class="string">"json"</span>,</span><br><span class="line">        type: <span class="string">"post"</span>,</span><br><span class="line">        data:&#123;</span><br><span class="line">            searchUserInfo: $(<span class="string">"#user_info"</span>).val()</span><br><span class="line">        &#125;,</span><br><span class="line">        success:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line">          response(data);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;);</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>layui</tag>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title>产业互联网 重新定义效率与消费 (Chinese Edition)</title>
    <url>/2019/08/05/%E4%BA%A7%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91-%E9%87%8D%E6%96%B0%E5%AE%9A%E4%B9%89%E6%95%88%E7%8E%87%E4%B8%8E%E6%B6%88%E8%B4%B9-Chinese-Edition/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><h3 id="标注-黄色-位置-109"><a href="#标注-黄色-位置-109" class="headerlink" title="标注 (黄色) - 位置 109"></a>标注 (黄色) - 位置 109</h3><p>在 消 费 互 联 网 的 后 期 ， 做 什 么 不 重 要 ， 重 要 的 是 谁 要 做 。 只 有 B A T （ 指 百 度 、 阿 里 巴 巴 、 腾 讯 ） 量 级 的 大 玩 家 参 与 角 逐 ， 一 个 行 业 或 垂 直 领 域 才 能 快 速 变 成 风 口 或 机 会 ； 而</p><h3 id="标注-黄色-位置-116"><a href="#标注-黄色-位置-116" class="headerlink" title="标注 (黄色) - 位置 116"></a>标注 (黄色) - 位置 116</h3><p>当 资 本 和 人 才 都 聚 焦 在 虚 拟 的 价 值 上 ， 数 以 百 万 计 的 互 联 网 团 队 簇 拥 在 小 的 难 以 呼 吸 的 一 小 块 土 地 上 重 复 建 设 着 ， 甚 至 构 建 的 是 一 堆 堆 根 本 没 有 实 际 产 值 的 泡 沫 ， 只 是 或 靠 历 史 红 利 续 命 ， 或 靠 资 本 市 场 的 投 机 者 输 血 。 那</p><h3 id="标注-黄色-位置-119"><a href="#标注-黄色-位置-119" class="headerlink" title="标注 (黄色) - 位置 119"></a>标注 (黄色) - 位置 119</h3><p>泡 沫 里 温 暖 、 熟 悉 、 高 收 入 、 高 美 誉 度 ， 而 泡 沫 外 很 可 能 意 味 着 陌 生 、 苦 难 、 波 折 性 和 不 确 定 性 。 百</p><h3 id="标注-黄色-位置-121"><a href="#标注-黄色-位置-121" class="headerlink" title="标注 (黄色) - 位置 121"></a>标注 (黄色) - 位置 121</h3><p>传 统 行 业 加 上 产 业 互 联 网 之 后 ， 却 正 在 变 成 未 来 。 现</p><h3 id="备注-位置-121"><a href="#备注-位置-121" class="headerlink" title="备注 - 位置 121"></a>备注 - 位置 121</h3><p>需要深耕</p><h3 id="标注-黄色-位置-130"><a href="#标注-黄色-位置-130" class="headerlink" title="标注 (黄色) - 位置 130"></a>标注 (黄色) - 位置 130</h3><p>产 业 互 联 网 的 威 力 ， 一 是 来 自 产 业 自 身 的 刚 需 、 体 量 与 积 淀 ， 二 是 来 自 效 率 提 升 与 消 费 体 验 重 塑 给 企 业 带 来 的 质 变 ， 但</p><h3 id="备注-位置-131"><a href="#备注-位置-131" class="headerlink" title="备注 - 位置 131"></a>备注 - 位置 131</h3><p>必须熟知业务</p><h2 id="上篇-黄金时代：产业互联网的时代"><a href="#上篇-黄金时代：产业互联网的时代" class="headerlink" title="上篇 黄金时代：产业互联网的时代"></a>上篇 黄金时代：产业互联网的时代</h2><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-167"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-167" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 167"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 167</h3><p>产 业 互 联 网 ， 不 是 指 为 传 统 行 业 提 供 B 2 B （ B u s i n e s s t o B u s i n e s s ， 企 业 到 企 业 ） 信 息 化 服 务 的 工 具 或 平 台 ， 这 仅 仅 是 产 业 互 联 网 在 工 具 层 或 流 量 分 发 层 的 一 个 小 分 支 。 真</p><h3 id="备注-01-第1章-产业互联网，究竟是什么-gt-位置-168"><a href="#备注-01-第1章-产业互联网，究竟是什么-gt-位置-168" class="headerlink" title="备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 168"></a>备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 168</h3><p>从小做起深入行业</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-169"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-169" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 169"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 169</h3><p>产 业 自 身 发 展 的 新 阶 段 。 对 这 个 阶 段 ， 更 准 确 的 用 词 ， 应 该 是 “ 产 业 + 互 联 网 ” ， 简 称 产 业 互 联 网 。 所</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-178"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-178" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 178"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 178</h3><p>有 实 战 经 验 的 一 些 专 家 学 者 ， 会 尝 试 列 举 出 几 个 近 年 来 新 兴 的 、 聚 焦 于 传 统 行 业 产 业 链 服 务 和 上 下 游 打 通 的 网 站 平 台 ， 来 佐 证 产 业 互 联 网 的 世 界 观 和 方 法 论 。 比 如 ， 号 称 互 联 网 家 装 行 业 独 角 兽 的 “ 土 巴 兔 ” ， 比 如 专 注 于 钢 铁 行 业 B 2 B 电 商 服 务 的 “ 找 钢 网 ” 等 。 但</p><h3 id="备注-01-第1章-产业互联网，究竟是什么-gt-位置-180"><a href="#备注-01-第1章-产业互联网，究竟是什么-gt-位置-180" class="headerlink" title="备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 180"></a>备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 180</h3><p>还只是解决信息沟通问题</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-214"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-214" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 214"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 214</h3><p>如 果 说 消 费 互 联 网 致 力 于 消 费 者 个 体 的 虚 拟 化 ， 是 眼 球 经 济 和 流 量 经 济 ， 那 么 ， 产 业 互 联 网 则 致 力 于 企 业 的 虚 拟 化 ， 是 价 值 经 济 。 消</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-216"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-216" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 216"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 216</h3><p>产 业 互 联 网 区 别 于 消 费 互 联 网 ， 泛 指 以 生 产 者 为 服 务 对 象 （ 用 户 ） ， 以 生 产 活 动 为 应 用 产 经 的 互 联 网 应 用 ，</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-217"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-217" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 217"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 217</h3><p>体 现 在 互 联 网 对 各 产 业 的 生 产 、 交 易 、 融 资 、 流 通 等 各 个 环 节 的 改 造 、 升 级 、 能 源 节 约 和 效 率 提 升 。 产</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-218"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-218" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 218"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 218</h3><p>意 味 着 各 传 统 行 业 如 制 造 、 农 业 、 交 通 、 运 输 、 房 产 、 医 疗 、 教 育 、 家 居 等 的 互 联 网 化 。</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-221"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-221" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 221"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 221</h3><p>企 业 中 的 工 作 人 员 ， 供 应 链 上 的 合 作 伙 伴 。</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-222"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-222" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 222"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 222</h3><p>研 发 、 设 计 、 采 购 、 生 产 、 营 销 、 交 易 、 流 通 、 融 资 等 各 个 环 节 的 升 级 。</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-233"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-233" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 233"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 233</h3><p>产 业 互 联 网 ， 绝 不 仅 是 给 传 统 企 业 或 者 传 统 产 业 提 供 信 息 化 服 务 的 工 具 或 平 台 这 么 狭 小 。 因</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-236"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-236" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 236"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 236</h3><p>真 正 的 产 业 互 联 网 ， 指 的 就 是 进 化 之 后 的 传 统 产 业 ， 它 是 产 业 自 身 发 展 的 新 阶 段 。 对 这 个 阶 段 ， 更 准 确 的 用 词 ， 应 该 是 “ 产 业 + 互 联 网 ” ， 简 称 产 业 互 联 网 。 所</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-239"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-239" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 239"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 239</h3><p>关 键 的 助 攻 作 用 ”</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-252"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-252" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 252"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 252</h3><p>车 销 ” 加 上 互 联 网 ， 上 述 的 弊 病 就 全 部 迎 刃 而 解 了 。 比 如 在 一 款 叫 “ e 快 销 ” 的 车 销 工 具 A P P 当 中 ， 零 售 端 可 以 通 过 A P P 发 起 配 送 需 求 ， 并 有 系 统 级 大 数 据 提 供 的 预 测 依 据 。 而 车 销 人 员 则 通 过 销 售 端 的 A P P 来 记 录 每 一 家 零 售 端 的 供 货 、 结 算 情 况 ， 一 边 数 据 实 时 同 步 到 云 端 ， 一 边 蓝 牙 连 接 小 型 打 印 设 备 打 印 账 单 给 零 售 店 店 主 ， 实 现 移 动 数 字 办 公 。 当</p><h3 id="备注-01-第1章-产业互联网，究竟是什么-gt-位置-255"><a href="#备注-01-第1章-产业互联网，究竟是什么-gt-位置-255" class="headerlink" title="备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 255"></a>备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 255</h3><p>有机也可以这么做</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-256"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-256" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 256"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 256</h3><p>甚 至 ， 当 第 二 天 的 配 送 需 求 被 分 配 出 来 之 时 ， 系 统 可 以 根 据 地 图 计 算 出 最 合 理 的 配 送 路 线 推 荐 给 车 销 员</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-268"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-268" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 268"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 268</h3><p>进 化 之 后 的 装 修 企 业 （ 如 东 易 日 盛 等 ） ， 它 们 就 是 产 业 互 联 网 的 主 体 ； 而 土 巴 兔 只 是 为 这 些 传 统 装 修 公 司 进 化 提 供 辅 助 性 资 源 协 助 的 工 具 或 平 台 ， 辅 助 的 资 源 包 括 流 量 商 机 分 发 、 供 应 链 提 供 以 及 标 准 化 质 量 定 义 等</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-271"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-271" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 271"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 271</h3><p>经 过 “ + 互 联 网 ” 之 后 的 整 个 装 修 行 业 的 进 化 ， 是 在 4 万 亿 元 基 础 之 上 的 升 级 和 腾 飞 ， 这 个 产 业 互 联 网 的 本 体 ， 才 是 令 人 震 撼 和 期 待 的 。</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-274"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-274" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 274"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 274</h3><p>产 业 互 联 网 ， 是 产 业 ， 不 是 互 联 网 ， 至 少 不 是 传 统 意 义 上 的 互 联 网 。 所</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-280"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-280" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 280"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 280</h3><p>服 务 型 企 业 拥 抱 产 业 互 联 网 ， 就 可 以 实 现 现 代 化 升 级 ； 制 造 型 企 业 拥 抱 产 业 互 联 网 ， 就 可 以 实 现 智 能 制 造 升 级 ， 或 者 服 务 化 转 型 。</p><h3 id="备注-01-第1章-产业互联网，究竟是什么-gt-位置-282"><a href="#备注-01-第1章-产业互联网，究竟是什么-gt-位置-282" class="headerlink" title="备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 282"></a>备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 282</h3><p>最还是要回归传统实业</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-290"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-290" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 290"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 290</h3><p>企 业 的 生 产 侧 的 改 进 方 向 就 在 于 提 升 生 产 效 率 。 然</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-290-1"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-290-1" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 290"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 290</h3><p>传 统 企 业 的 产 业 互 联 网 升 级 ， 绝 不 等 同 于 提 升 效 率 这 么 简 单 ， 重 塑 消 费 体 验 也 是 同 等 重 要 的 必 备 转 型 要 素 。 否</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-293"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-293" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 293"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 293</h3><p>仅 包 含 以 提 升 效 率 为 目 的 的 产 业 端 升 级 ， 还 包 含 有 以 优 化 体 验 为 目 的 的 消 费 端 改 造 。 因</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-293-1"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-293-1" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 293"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 293</h3><p>消 费 者 是 产 业 的 有 机 组 成 部 分 ， 是 消 费 者 的 需 求 定 义 了 产 业 的 边 界 。</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-298"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-298" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 298"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 298</h3><p>提 升 效 率 + 重 塑 消 费 体 验 ” 。 尤</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-300"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-300" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 300"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 300</h3><p>消 费 体 验 的 升 级 以 及 线 上 引 流 转 化 ， 却 几 乎 是 所 有 企 业 的 刚 需 。 所</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-302"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-302" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 302"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 302</h3><p>整 个 商 业 环 境 正 在 从 供 给 侧 主 导 向 消 费 侧 主 导 转 型 ， 消 费 侧 有 能 力 向 生 产 侧 渗 透 。 而</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-305"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-305" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 305"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 305</h3><p>一 方 面 传 统 制 造 业 从 大 规 模 生 产 向 个 性 化 定 制 转 型 ， 也 就 是 现 在 常 说 的 C 2 B （ C u s t o m e r t o B u s i n e s s ， 即 消 费 者 到 企 业 ） 或 F 2 C （ F a c t o r y t o C u s t o m e r ， 即 从 厂 商 到 消 费 者 ） ； 另 一 方 面 ， 即 使 对 于 那 些 原 来 只 做 生 产 制 造 供 应 、 不 面 对 消 费 者 的 企 业 ， 面 对 中 国 经 济 新 常 态 的 局 面 以 及 产 业 互 联 网 的 机 遇 ， 也 存 在 “ 制 造 业 服 务 化 ” 的 转 型 机 遇 和 模 式 。</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-314"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-314" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 314"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 314</h3><p>一 个 原 先 做 代 工 的 工 厂 ， 就 变 成 了 基 于 消 费 升 级 、 产 业 互 联 网 背 景 下 的 服 务 业 。</p><h3 id="备注-01-第1章-产业互联网，究竟是什么-gt-位置-315"><a href="#备注-01-第1章-产业互联网，究竟是什么-gt-位置-315" class="headerlink" title="备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 315"></a>备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 315</h3><p>蔬菜基地服务业</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-317"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-317" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 317"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 317</h3><p>从 传 统 的 工 厂 生 产 制 造 ， 转 向 “ 制 造 + 零 售 + 身 心 灵 教 育 ” 的 综 合 商 业 模 式 ， 通 过 用 户 购 买 产 品 的 消 费 额 来 定 义 会 员 的 分 级 ， 进 而 匹 配 后 市 场 的 身 心 灵 课 程 和 心 理 咨 询 服 务 ， 就 非 常 有 效 地 形 成 了 差 异 化 。 传 统 的 零 售 门 店 ， 现 在 既 是 销 售 场 所 ， 又 是 会 员 们 和 老 师 们 交 流 身 心 灵 课 程 和 心 得 的 轻 社 交 场 所 ； 传 统 的 产 品 销 售 ， 既 是 卖 产 品 ， 又 是 延 伸 达 到 会 员 条 件 之 后 的 免 费 课 程 学 习 。 这</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-324"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-324" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 324"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 324</h3><p>当 下 中 国 大 量 中 小 微 制 造 企 业 的 困 境 、 转 型 与 机 遇 。 它 们 没 有 华 为 、 海 尔 那 样 的 规 模 ， 无 法 从 智 能 制 造 、 财 务 信 息 化 、 “ 工 业 4 . 0 ” 等 维 度 去 实 现 产 业 互 联 网 化 ； 它 们 又 不 是 服 务 业 ， 在 转 型 之 前 更 多 的 只 是 纯 粹 的 供 应 链 中 的 一 个 环 节 ， 面 对 的 只 是 下 游 的 销 售 代 理 或 采 购 商 ， 甚 至 连 用 户 都 接 触 不 到 。 然 而 在 中 国 的 经 济 新 常 态 到 来 之 后 ， 供 给 侧 严 重 的 供 过 于 求 ， 于 是 ， 制 造 业 服 务 化 转 型 ， 就 成 为 了 一 部 分 企 业 自 我 突 破 、 自 我 救 赎 的 方 法 。</p><h3 id="标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-329"><a href="#标注-黄色-01-第1章-产业互联网，究竟是什么-gt-位置-329" class="headerlink" title="标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 329"></a>标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 329</h3><p>趋 势 ， 提 升 效 率 与 重 塑 消 费 体 验 已 成 为 产 业 互 联 网 化 的 双 引 擎 。 这</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-341"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-341" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 341"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 341</h3><p>投 资 的 乏 力 ， 资 本 的 收 紧 ， 是 最 重 要 的 原 因 。 因</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-343"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-343" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 343"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 343</h3><p>新 兴 的 各 类 互 联 网 项 目 ， 几 乎 未 见 能 盈 利 的 ， 基 本 完 全 依 靠 资 本 市 场 的 资 金 在 驱 动 成 长 。 一 旦 找 不 到 接 盘 侠 ， 这 类 造 血 能 力 低 下 、 企 业 家 精 神 匮 乏 的 企 业 ， 直 接 就 面 临 崩 盘 。 而</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-350"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-350" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 350"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 350</h3><p>各 家 自 消 费 刷 单 、 自 己 给 自 己 抹 口 红 ， 进 而 制 造 泡 沫 、 吸 引 投 资 的 企 图 ， 已 然 变 成 了 一 种 阳 谋 。 这</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-358"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-358" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 358"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 358</h3><p>企 业 的 本 意 并 不 是 骗 局 ， 但 不 断 依 靠 新 的 接 盘 侠 输 血 进 入 、 老 的 接 盘 侠 套 现 退 出 来 维 持 企 业 运 营 的 模 式 ， 的 确 是 “ 庞 氏 ” 的 ， 如</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-363"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-363" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 363"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 363</h3><p>而 在 经 济 新 常 态 下 ， 资 本 预 冷 、 高 估 值 公 司 无 人 接 盘 、 企 业 无 力 建 构 正 向 现 金 流 商 业 模 式 ， 都</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-383"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-383" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 383"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 383</h3><p>证 明 了 “ 传 统 行 业 、 线 下 、 实 业 ” 和 “ 互 联 网 、 线 上 、 虚 拟 ” ， 绝 对 不 是 一 个 落 后 、 一 个 先 进 ， 一 个 过 去 、 一 个 未 来 的 关 系 ； 恰</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-434"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-434" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 434"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 434</h3><p>互 联 网 行 业 的 人 均 G D P ， 来 更 深 刻 地 反 思 互 联 网 行 业 的 现 状 。 2 0 1 5 年 ， 互 联 网 行 业 从 业 人 员 大 约 在 5 0 0 万 人 ， 并 且 以 每 年 1 5 0 万 人 的 速 度 增 加 。 由 于 互 联 网 全 行 业 的 年 收 入 总 额 是 6 0 0 0 亿 元 人 民 币 ， 所 以 ， 互 联 网 行 业 人 均 G D P 大 约 是 1 2 万 元 ，</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-438"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-438" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 438"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 438</h3><p>不 到 3 % 的 互 联 网 劳 动 力 ， 创 造 接 近 一 半 的 G D P 。 那 么 ， 非 B A T 剩 下 的 9 7 % 的 互 联 网 从 业 人 员 ， 其 人 均 G D P 是 多 少 呢 ？ 毫 无 疑 问 ， 远 低 于 其 所 在 城 市 的 人 均 G D P ，</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-459"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-459" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 459"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 459</h3><p>更 多 的 是 大 量 配 角 玩 家 。 这 些 配 角 玩 家 ， 本 身 是 没 有 独 立 商 业 模 式 的 ， 更 多 是 依 靠 附 着 在 “ B A T 们 ” 身 上 ， 形 成 一 层 套 一 层 的 复 杂 的 生 态 链 。</p><h3 id="备注-02-第2章-产业互联网VS消费互联网-gt-位置-460"><a href="#备注-02-第2章-产业互联网VS消费互联网-gt-位置-460" class="headerlink" title="备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 460"></a>备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 460</h3><p>bat占有了大量的互联网基础设施</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-482"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-482" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 482"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 482</h3><p>早 年 大 家 玩 的 是 搜 索 引 擎 的 网 盟 分 成 规 则 和 广 告 框 架 规 则 ， 而 现 在 玩 的 是 直 播 平 台 的 主 播 分 佣 规 则 而 已 。</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-500"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-500" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 500"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 500</h3><p>第 一 重 解 读 ， 只 有 不 到 5 % 的 网 大 能 盈 利 ， 供 给 侧 同 质 化 竞 争 激 烈 。 但 这 至 多 也 只 能 说 明 ， 中 国 最 经 典 的 “ 皮 鞋 村 ” 模 式 再 现 了 ， 这</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-518"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-518" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 518"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 518</h3><p>拿 去 广 告 和 影 视 剧 版 权 换 来 的 会 员 付 费 收 入 ， 来 支 付 给 网 大 ， 本 质 就 是 一 种 视 频 网 站 的 “ 贴 补 ” 行 为 ， 是 一 种 阶 段 性 的 政 策 ， 网 大 的 商 业 模 式 不 是 来 自 用 户 付 费 ， 而 是 平 台 贴 补 。</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-527"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-527" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 527"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 527</h3><p>从 企 业 资 本 估 值 建 设 的 角 度 ， 这 并 不 奇 怪 。 视 频 网 站 花 大 价 钱 购 买 影 视 剧 版 权 ， 既 不 被 资 本 市 场 看 好 ， 又 不 被 企 业 投 资 人 看 好 ， 一 直 是 被 质 疑 和 诟 病 的 痛 点 ， 并 被 认 为 是 入 不 敷 出 、 身 处 影 视 行 业 下 游 、 商 业 模 式 不 成 立 。 所 以 ， 要 让 视 频 网 站 这 个 模 式 在 资 本 市 场 不 断 提 升 估 值 ， 唯 有 打 造 出 P G C 这 样 的 网 络 创 新 模 式 。 于</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-551"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-551" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 551"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 551</h3><p>一 部 网 大 的 成 功 ， 主 要 来 源 三 个 要 点 ： 片 名 （ 蹭 热 点 ） 、 封 面 （ 诱 惑 ） 、 前 6 分 钟 试 看 （ 擦 边 球 ） 。 而</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-555"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-555" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 555"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 555</h3><p>投 资 界 、 行 业 、 媒 体 共 造 “ 风 口 ” 和 舆 论 导 向 ， 快 速 吸 引 下 一 轮 资 金 接 盘 ， 而 企 业 则 “ 顺 势 ” 制 造 、 包 装 数 据 。 众 人 皆 醉 从 而 在 表 象 上 快 速 营 造 出 一 个 巨 大 泡 沫 的 新 兴 市 场 和 风 口 市 场 ， 而</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-557"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-557" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 557"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 557</h3><p>5 % 的 金 字 塔 尖 的 企 业 竞 争 ， 在 一 个 阶 段 内 不 得 不 以 烧 钱 为 代 价 获 得 市 场 份 额 ， 那 么 ， 剩 下 9 5 % 的 塔 尖 之 外 的 部 分 ， 则 是 典 型 的 一 级 市 场 二 级 化 ， 也 就 是 目 标 非 常 明 确 的 炒 短 线 。 这 也 是 为 何 频 频 出 现 一 个 垂 直 细 分 的 互 联 网 分 支 领 域 ， 往 往 生 命 周 期 不 到 5 年 就 瞬 间 枯 萎 了 ： 2 年 入 场 （ 上 市 或 资 产 重 组 、 并 购 ） 、 3 年 解 锁 或 对 赌 完 成 。</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-560"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-560" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 560"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 560</h3><p>上 市 或 收 购 前 已 经 严 重 透 支 ， 锁 定 或 对 赌 期 完 成 业 绩 大 多 靠 自 消 费 或 过 桥 垫 资 冲 业 绩 。 到</p><h3 id="备注-02-第2章-产业互联网VS消费互联网-gt-位置-561"><a href="#备注-02-第2章-产业互联网VS消费互联网-gt-位置-561" class="headerlink" title="备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 561"></a>备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 561</h3><p>庞式</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-574"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-574" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 574"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 574</h3><p>首 先 是 用 户 的 拉 新 （ 引 流 ） 、 留 存 （ 注 册 ） 和 转 化 （ 付 费 ） 。 直</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-640"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-640" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 640"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 640</h3><p>中 国 经 济 用 三 十 多 年 的 时 间 ， 吃 光 了 人 口 红 利 ， 于 是 “ 新 常 态 ” 就 成 为 中 国 经 济 的 下 半 场 ； 互 联 网 的 人 口 红 利 吃 了 二 十 几 年 ， 也 吃 光 了 ， 互 联 网 公 司 的 发 展 不 得 不 从 追 求 速 度 和 规 模 ， 转 向 追 求 纵 深 和 创 新 ， 这 就 是 互 联 网 的 下 半 场 。 后</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-646"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-646" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 646"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 646</h3><p>玩 的 是 各 个 行 业 从 上 游 到 下 游 的 产 业 互 联 网 化 — — 提 升 体 验 、 提 高 效 率 、 降 低 成 本 。 这</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-648"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-648" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 648"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 648</h3><p>原 来 的 线 性 产 业 价 值 链 逐 渐 演 化 成 网 状 产 业 生 态 圈 ？ 如 何 进 化 为 一 个 以 用 户 为 中 心 的 、 实 时 高 效 协 同 的 产 业 生 态 网 络 ？ 在</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-655"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-655" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 655"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 655</h3><p>平 台 的 本 质 ， 是 流 量 的 生 意 。</p><h3 id="备注-02-第2章-产业互联网VS消费互联网-gt-位置-655"><a href="#备注-02-第2章-产业互联网VS消费互联网-gt-位置-655" class="headerlink" title="备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 655"></a>备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 655</h3><p>中介生意</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-656"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-656" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 656"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 656</h3><p>消 费 互 联 网 时 代 的 平 台 ， 更 多 是 通 过 早 期 蓝 海 市 场 时 期 切 入 用 户 的 底 层 刚 需 ， 进 而 吸 附 海 量 的 用 户 。 在 此 基 础 上 ， 制 定 流 量 分 发 的 规 则 ， 将 用 户 分 发 到 具 体 提 供 服 务 的 应 用 当 中 去 ， 并 通 过 流 量 分 发 获 取 商 业 收 入 。 当</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-664"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-664" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 664"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 664</h3><p>次 平 台 ， 指 的 是 垂 直 于 各 个 产 业 的 分 类 流 量 聚 合 平 台 。 比</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-666"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-666" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 666"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 666</h3><p>在 消 费 互 联 网 的 发 展 过 程 中 ， 大 的 平 台 借 力 资 本 及 流 量 分 发 优 势 ， 会 进 驻 垂 直 行 业 领 域 ， 以 控 股 、 参 股 或 直 营 的 方 式 进 入 应 用 层 ， 比</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-680"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-680" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 680"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 680</h3><p>平 台 不 是 “ 人 文 景 观 ” ， 更 多 知 识 “ 自 然 景 观 ” 。 所 谓 自 然 景 观 ， 指 的 是 平 台 的 诞 生 ， 是 在 特 定 时 期 ， 由 于 一 定 的 偶 发 性 ， 在 人 口 红 利 、 蓝 海 环 境 等 多 重 因 素 下 而 自 然 形 成 的 。 这</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-684"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-684" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 684"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 684</h3><p>只 有 一 个 趋 势 和 一 个 产 品 理 念 ， 要 做 到 平 台 的 规 模 ， 则 至 少 要 几 十 亿 到 百 亿 元 级 别 的 烧 钱 亏 损 打 底 。 所</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-689"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-689" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 689"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 689</h3><p>流 量 买 入 和 卖 出 几 乎 无 法 形 成 差 价 ， 信 息 不 对 称 的 市 场 机 会 和 红 利 已 经 不 复 存 在 ； 而 绝 对 刚 需 基 本 是 伪 命 题 ， 只 有 相 对 刚 需 可 能 还 存 在 ， 但 相 对 刚 需 的 留 存 能 力 不 足 ， 或 用 户 覆 盖 面 不 足 ， 导 致 留 存 远 达 不 到 正 循 环 条 件 ， 故 而 难 以 形 成 商 业 模 型 。 其 次 ， 常 见 的 补 贴 模 式 是 通 过 烧 钱 获 取 C 端 用 户 ， 但 由 于 C 端 用 户 的 无 忠 诚 性 及 利 益 驱 动 性 ， 几 乎 没 有 沉 淀 价 值 ； 而 2 B 端 的 烧 钱 ， 在 绝 大 部 分 行 业 不 奏 效 ， 或 根 本 没 有 达 到 条 件 的 B 端 的 存 在 。 综</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-697"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-697" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 697"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 697</h3><p>今 天 ， 唱 片 、 平 面 媒 体 甚 至 纸 质 图 书 ， 都 已 经 萎 缩 到 了 一 个 极 窄 的 小 众 范 畴 内 ， 取 而 代 之 的 是 数 字 音 乐 、 网 络 媒 体 、 自 媒 体 和 电 子 图 书 等 。 然 而 ， 时 间 跨 越 到 最 近 1 0 年 ， 取 而 代 之 的 “ 取 代 逻 辑 ” 失 效 了 ， “ 并 行 逻 辑 ” 出 现 了 。 P</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-701"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-701" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 701"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 701</h3><p>娱 乐 消 费 需 求 总 量 受 到 经 济 新 常 态 的 长 期 影 响 ， 远 远 跟 不 上 供 给 侧 并 行 逻 辑 下 的 供 过 于 求 的 红 海 增 长 。 可</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-702"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-702" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 702"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 702</h3><p>在 严 重 供 过 于 求 的 环 境 中 ， 以 “ 消 耗 时 间 ” 为 必 要 条 件 的 泛 娱 乐 消 费 选 择 ， 势 必 造 成 每 个 娱 乐 服 务 能 分 到 的 需 求 量 更 少 。 而</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-713"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-713" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 713"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 713</h3><p>被 动 解 构 ， 打 散 变 成 了 N 多 家 的 小 微 企 业 。 过 去 的 一 个 冰 箱 是 家 用 电 器 ， 未 来 的 冰 箱 变 成 了 家 庭 膳 食 的 管 理 工 具 — — 通 过 传 感 器 和 物 联 网 ， 它 可 以 知 道 你 的 每 一 件 食 品 是 否 过 期 ， 提 醒 你 是 否 需 要 补 充 ， 以 及 根 据 存 储 的 菜 品 推 送 对 应 菜 单 做 法 — — 整 个 商 业 模 式 都 发 生 变 化 了 。</p><h3 id="备注-02-第2章-产业互联网VS消费互联网-gt-位置-716"><a href="#备注-02-第2章-产业互联网VS消费互联网-gt-位置-716" class="headerlink" title="备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 716"></a>备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 716</h3><p>分布式 颗粒化</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-738"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-738" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 738"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 738</h3><p>传 统 产 业 + 互 联 网 ， 传 统 实 业 进 化 成 新 实 业 ， 消 费 互 联 网 针 对 新 实 业 释 放 资 源 和 人 才 ， 这 是 必 然 趋 势 ， 也 是 唯 一 的 钥 匙 。 这</p><h3 id="备注-02-第2章-产业互联网VS消费互联网-gt-位置-739"><a href="#备注-02-第2章-产业互联网VS消费互联网-gt-位置-739" class="headerlink" title="备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 739"></a>备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 739</h3><p>新机会</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-741"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-741" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 741"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 741</h3><p>产 业 互 联 网 化 下 的 新 一 代 的 传 统 产 业 ， 或 者 叫 新 实 业 ， 不 靠 资 本 驱 动 过 活 ， 更 关 注 内 生 增 长 的 造 血 功 能 、 自 由 现 金 流 和 利 润 。 它 的 核 心 特 征 是 O 2 O ， 也 就 是 线 上 线 下 一 体 化 运 营 。</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-745"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-745" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 745"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 745</h3><p>从 “ 频 次 ” “ 顺 序 ” “ 产 品 ” “ 特 征 ” “ 体 量 ” 五 个 维 度 来 解 读 ， 如</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-757"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-757" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 757"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 757</h3><p>高 频 业 务 做 留 存 ， 中 低 频 业 务 做 转 化 增 强 ” ， 如 图 2 1 5 所 示 。 高 频 业 务 ， 比 如 餐 饮 、 外 卖 、 零 售 、 城 市 出 行 、 家 政 、 金 融 等 ， 做 留 存 就 是 用 互 联 网 平 台 或 工 具 把 用 户 锁 定 在 自 己 的 客 户 端 上 ， 促 进 高 频 次 的 使 用 进 而 获 取 商 业 价 值 。 这</p><h3 id="备注-02-第2章-产业互联网VS消费互联网-gt-位置-758"><a href="#备注-02-第2章-产业互联网VS消费互联网-gt-位置-758" class="headerlink" title="备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 758"></a>备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 758</h3><p>会员服务</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-760"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-760" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 760"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 760</h3><p>中 低 频 业 务 ， 比 如 房 产 、 汽 车 、 婚 嫁 、 母 婴 、 装 修 、 家 居 、 教 育 、 医 疗 、 旅 游 等 ， 互 联 网 首 先 要 做 的 ， 就 是 “ 转 化 增 强 ” 。 传</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-761"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-761" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 761"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 761</h3><p>线 上 引 流 是 最 重 要 的 渠 道 之 一 。 而 精 细 化 运 营 和 数 据 漏 斗 管 理 ， 则 是 转 化 增 强 的 第 一 步 ， 也 就 是 从 展 现 率 、 点 击 率 、 网 电 转 化 率 、 邀 约 率 、 到 访 率 、 成 交 率 六 大 关 键 用 户 漏 斗 节 点 ， 进 行 精 细 化 运 营 。 这</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-763"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-763" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 763"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 763</h3><p>转 化 增 强 还 包 括 提 供 互 联 网 工 具 ， 辅 助 关 键 角 色 进 行 “ 人 肉 干 预 ” ， 从 而 增 强 商 机 分 配 的 合 理 性 和 效 率 优 先 ， 进 而 增 强 商 业 转 化 率 ， 这</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-766"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-766" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 766"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 766</h3><p>可 以 有 一 套 用 户 画 像 的 C R M （ 客 户 关 系 管 理 ） 系 统 ， 以 及 一 套 用 于 记 录 房 产 经 纪 人 综 合 能 力 的 经 纪 人 评 价 体 系 系 统 ， 再 辅 以 一 套 商 机 分 配 规 则 ， 这</p><h3 id="备注-02-第2章-产业互联网VS消费互联网-gt-位置-767"><a href="#备注-02-第2章-产业互联网VS消费互联网-gt-位置-767" class="headerlink" title="备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 767"></a>备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 767</h3><p>转换成有机食品</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-768"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-768" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 768"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 768</h3><p>人 员 在 接 听 过 程 中 完 成 了 用 户 画 像 的 勾 选 ， 比 如 意 向 区 域 、 资 金 预 算 、 户 型 要 求 等 。 对 这 些 关 键 数 据 标 准 化 ， 客 服 人 员 在 C R M 系 统 里 确 认 之 后 ， 系 统 会 根 据 商 机 分 配 规 则 ， 从 经 纪 人 评 价 体 系 系 统 当 中 选 择 出 最 适 合 服 务 这 个 需 求 的 经 纪 人 ， 并 将 这 个 商 机 推 送 到 该 经 纪 人 的 手 机 A P P 上 。 这</p><h3 id="备注-02-第2章-产业互联网VS消费互联网-gt-位置-770"><a href="#备注-02-第2章-产业互联网VS消费互联网-gt-位置-770" class="headerlink" title="备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 770"></a>备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 770</h3><p>转换成销售访问</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-773"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-773" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 773"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 773</h3><p>大 数 据 的 核 心 算 法 之 下 ， 哪 个 经 纪 人 更 适 合 服 务 这 个 需 求 ， 很 可 能 和 店 长 的 个 人 直 觉 选 择 是 不 同 的 结 果 。 再</p><h3 id="标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-805"><a href="#标注-黄色-02-第2章-产业互联网VS消费互联网-gt-位置-805" class="headerlink" title="标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 805"></a>标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 805</h3><p>给 设 计 师 提 供 网 络 版 的 设 计 工 具 和 供 应 链 工 具 ， 便 于 他 和 用 户 阐 述 设 计 方 案 和 效 果 的 时 候 ， 实 时 地 根 据 用 户 需 求 替 换 物 件 、 实 时 呈 现 3 D 效 果 以 及 最 终 报 价 。 这</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
  </entry>
  <entry>
    <title>docker环境配置nginx-php-mysql</title>
    <url>/2019/07/17/docker-nginx-php-mysql/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:16 GMT+0800 (GMT+08:00) --><ul><li><a href="#env">安装前准备</a><ul><li><a href="#nginx">Nginx配置</a></li><li><a href="#img_install">MySQL配置</a></li><li><a href="#sys_install">PHP配置</a></li></ul></li></ul><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><p>能够运行docker的主机</p><h3 id="安装前准备"><a href="#安装前准备" class="headerlink" title="安装前准备"></a><h9 id="env">安装前准备</h9></h3><ul><li><p>安装docker-ce版本</p></li><li><p>修改docker仓亏，增加阿里云的配置</p></li></ul><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#mac中的配置</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"debug"</span> : <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"experimental"</span> : <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"registry-mirrors"</span> : [</span><br><span class="line">    <span class="string">"https://x7e3y83k.mirror.aliyuncs.com"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#ubuntu linux中的配置</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://x7e3y83k.mirror.aliyuncs.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>配置文件&amp;数据目录确认</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#配置文件</span></span><br><span class="line"></span><br><span class="line">/server</span><br><span class="line">├── mysql</span><br><span class="line">│   ├── conf</span><br><span class="line">│   └── logs</span><br><span class="line">├── nginx</span><br><span class="line">│   ├── cert</span><br><span class="line">│   ├── conf</span><br><span class="line">│   ├── logs</span><br><span class="line">│   └── nginx.conf</span><br><span class="line">├── php</span><br><span class="line">│   ├── conf			<span class="comment">#包含了php.ini 和 fpm配置文件www.conf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据目录</span></span><br><span class="line"></span><br><span class="line">/data</span><br><span class="line">├── logs</span><br><span class="line">│   ├── nginx</span><br><span class="line">├── mysql</span><br><span class="line">│   ├── data</span><br><span class="line">│   ├── logs</span><br><span class="line">└── mysql_bak</span><br><span class="line">    ├── data</span><br></pre></td></tr></table></figure><ol><li><h4 id="Nginx配置"><a href="#Nginx配置" class="headerlink" title="Nginx配置"></a><h9 id="nginx">Nginx配置</h9></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">   docker pull nginx:stable   <span class="comment">#下载nginx的稳定版镜像</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">#准备事先准备的default.conf</span></span><br><span class="line">   </span><br><span class="line">   docker run -d -p 80:80 -p 443:443 \</span><br><span class="line">--name nginx-stable \</span><br><span class="line">-v /server/nginx/conf:/etc/nginx/conf.d \</span><br><span class="line">-v /server/nginx/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">-v /server/nginx/cert:/etc/ssl/certs \</span><br><span class="line">--link php5:php \</span><br><span class="line">-v /www:/www \</span><br><span class="line">-v /data/logs/nginx:/var/<span class="built_in">log</span>/nginx \</span><br><span class="line">nginx:stable</span><br><span class="line">   </span><br><span class="line">   <span class="comment"># 映射了默认的nginx.conf和默认的配置文件目录</span></span><br></pre></td></tr></table></figure></li><li><h4 id="MySQL配置"><a href="#MySQL配置" class="headerlink" title="MySQL配置"></a><h9 id="mysql">MySQL配置</h9></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">   <span class="comment">#预先拷贝my.cnf至/server/mysql/conf/</span></span><br><span class="line"></span><br><span class="line">//初始化设置密码</span><br><span class="line">docker run -d -e MYSQL_ROOT_PASSWORD=123456 \</span><br><span class="line">--name mysql \</span><br><span class="line">-v /server/mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf \</span><br><span class="line">-v /data/mysql/data:/var/lib/mysql \</span><br><span class="line">-v /data/mysql/logs:/logs \</span><br><span class="line">-p 3306:3306 mysql:5.7</span><br></pre></td></tr></table></figure></li><li><h4 id="PHP配置"><a href="#PHP配置" class="headerlink" title="PHP配置"></a><h9 id="php">PHP配置</h9></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">docker run -d -p 9000:9000 --name php5 \</span><br><span class="line">-v /opt/workspace:/www \</span><br><span class="line">-v /server/php/conf/php.ini:/usr/<span class="built_in">local</span>/etc/php/php.ini \</span><br><span class="line">-v /server/php/conf/www.conf:/usr/<span class="built_in">local</span>/etc/php-fpm.d/www.conf \</span><br><span class="line">-v /tmp:/tmp \</span><br><span class="line">--link mysql:mysql \</span><br><span class="line">php:5-fpm</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果软件版本问题，请用 apt-get install libpcre3=2:8.35-3.3+deb8u4(安装特定的版本号)</span></span><br><span class="line">   </span><br><span class="line">   <span class="comment">#将配置文件拷贝致docker中</span></span><br><span class="line">docker cp php.ini php5:/usr/<span class="built_in">local</span>/etc/php/php.ini</span><br><span class="line"></span><br><span class="line"><span class="comment">#运行php5.sh 将需要的gd库和mysql插件安装</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装xdebug和redis</span></span><br><span class="line"><span class="comment">#进入容器  </span></span><br><span class="line">apt-get update \</span><br><span class="line">&amp;&amp; apt-get install -y \</span><br><span class="line">        libfreetype6-dev \</span><br><span class="line">        libjpeg62-turbo-dev \</span><br><span class="line">        libmcrypt-dev \</span><br><span class="line">        libpng-dev \</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pecl search xdebug-版本号</span><br><span class="line">pecl install redis-版本号</span><br><span class="line">docker-php-ext-enable redis xdebug</span><br></pre></td></tr></table></figure></li></ol><!-- rebuild by neat -->]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title>tp5-nginx配置</title>
    <url>/2019/06/04/tp5-nginx%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>做项目要弄一个微信管理系统，涉及到tp5，为了pathinfo问题改了好久的配置。耽误了不少的功夫。当然其中也有项目的因素，更加坚定了之前的想法。</p><p>废话不说，适应tp的配置如下：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  root /www/rhaphp;</span><br><span class="line">  index index.php index.html index.htm index.nginx-debian.html;</span><br><span class="line">  server_name rhaphp.localhost;</span><br><span class="line">  location / &#123;</span><br><span class="line">  	index index.php index.html index.htm;</span><br><span class="line">  	try_files  <span class="variable">$uri</span>  /index.php<span class="variable">$uri</span>;</span><br><span class="line">  	<span class="keyword">if</span> (!-e <span class="variable">$request_filename</span>) &#123;</span><br><span class="line">  	<span class="comment">#rewrite ^/(.*)$ /index.php?$1 last;</span></span><br><span class="line">  	rewrite ^(.*)$ /index.php?s=<span class="variable">$1</span> last;</span><br><span class="line">  	<span class="built_in">break</span>;</span><br><span class="line">  	&#125;</span><br><span class="line">  	  client_max_body_size    50m;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  location ~ \.php(.*)$ &#123;</span><br><span class="line">  	fastcgi_pass php:9000;</span><br><span class="line">  	fastcgi_index index.php;</span><br><span class="line">      fastcgi_split_path_info  ^(.+\.php)(.*)$;</span><br><span class="line">      fastcgi_param           SCRIPT_FILENAME <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">      fastcgi_param           PATH_INFO       <span class="variable">$fastcgi_path_info</span>;</span><br><span class="line">      include fastcgi_params;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>thinkphp5</tag>
        <tag>nginx</tag>
        <tag>rhaphp</tag>
      </tags>
  </entry>
  <entry>
    <title>群晖SPK打包</title>
    <url>/2019/05/29/%E7%BE%A4%E6%99%96SPK%E6%89%93%E5%8C%85/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#获得环境编译包</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/SynologyOpenSource/pkgscripts-ng.git pkgscripts</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建编译环境</span></span><br><span class="line"><span class="built_in">cd</span> pkgscripts/</span><br><span class="line">./EnvDeploy -v 6.2 -p x64</span><br><span class="line"></span><br><span class="line"><span class="comment">#测试包</span></span><br><span class="line"><span class="built_in">cd</span> /toolkit/<span class="built_in">source</span>/</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/SynologyOpenSource/minimalPkg.git</span><br><span class="line"></span><br><span class="line"><span class="comment">#编译测试包</span></span><br><span class="line">pkgscripts/PkgCreate.py -x0 -c minimalPkg -p x64</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>群晖</tag>
      </tags>
  </entry>
  <entry>
    <title>moon river 月亮河</title>
    <url>/2019/05/28/moon-river-%E6%9C%88%E4%BA%AE%E6%B2%B3/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>月亮河</p><p>（数字为吹 前面加扛得为吸）</p><p>6 -8 7 -7 -6 6 -5 6<br>Moon Riv-er, wid-er than a mile</p><p>4 -7 -6 6 -5 6 4 -4<br>I’m cross-in’ you in style some day.</p><p>5 4 6 5 -4 4 6 5<br>Old dream mak-er, you heart break-er</p><p>-4 4 5 6 7 -7<br>Wher-ev-er you’re go-in’</p><p>-6 -7 -6 6 -6<br>I’m go-in’ your way.</p><p>6 -8 7 -7 -6 6 -5 6<br>Two drift-ers, off to see the world.</p><p>4 -7 -6 6 -5 6 4 -4<br>There’s such a lot of world to see.</p><p>5 4 5 6 7 -8 7 6<br>We’re af-ter the same rain-bow’s end.</p><p>-7 -6 6 -5 6<br>wait-in’ ‘round the bend,</p><p>4 -7 -6 6 -5 6<br>my Huck-le-ber-ry friend,</p><p>4 -5 -4 5 4<br>Moon Riv-er and me.</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>口琴</category>
      </categories>
  </entry>
  <entry>
    <title>virtualbox Linux下搭建黑群晖开发环境</title>
    <url>/2019/05/24/virtualbox-%E5%BC%80%E5%8F%91%E6%9C%BA%E5%99%A8-%E6%90%AD%E5%BB%BA%E7%BE%A4%E6%99%96%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><ul><li><a href="#env">环境安装</a><ul><li><a href="#init">vbox虚拟机配置</a></li><li><a href="#img_install">黑群晖的磁盘镜像安装</a></li><li><a href="#sys_install">安装群晖系统</a></li></ul></li><li><a href="#linux">ubuntu部署vbox虚拟机</a><ul><li><a href="#linux_install">安装linux版vbox</a></li><li><a href="#regist">注册虚拟机</a></li><li><a href="#vbox_modify">虚拟机环境信息更改</a></li></ul></li></ul><h3 id="软件环境"><a href="#软件环境" class="headerlink" title="软件环境"></a>软件环境</h3><p>运行virtualbox(简称vbox)环境主机 Ubuntu linux 16.04</p><p>群晖开发环境搭建机 osx</p><h3 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a><h9 id="env">环境安装</h9></h3><ol><li><h4 id="vbox虚拟机配置"><a href="#vbox虚拟机配置" class="headerlink" title="vbox虚拟机配置"></a><h9 id="init">vbox虚拟机配置</h9></h4><p>osx本地建立vbox虚拟机，建立4个磁盘<br>1个ide用来装ubuntu<br>1个scsci用来装群晖系统 /dev/sdb<br>2个scsi用来装群晖数据盘</p></li><li><h4 id="黑群晖的磁盘镜像安装"><a href="#黑群晖的磁盘镜像安装" class="headerlink" title="黑群晖的磁盘镜像安装"></a><h9 id="img_install">黑群晖的磁盘镜像安装</h9></h4></li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载镜像</span></span><br><span class="line">wget http://down.nas2x.com/synology/dsm/6.2/6.2.0/ds3617_6.2/synoboot.img</span><br><span class="line"></span><br><span class="line"><span class="comment">#vbox中dd镜像到群晖系统盘</span></span><br><span class="line">dd <span class="keyword">if</span>=synoboot.img of=/dev/sdb</span><br></pre></td></tr></table></figure><p>重启系统，并用群晖系统盘启动</p><p><img src="/images/pasted-8.png" alt="upload successful"></p><p>此时选择第一项即可，当出现下面这样的图片表示系统启动成功</p><p><img src="/images/pasted-9.png" alt="upload successful"></p><ol start="3"><li><h4 id="安装群晖系统"><a href="#安装群晖系统" class="headerlink" title="安装群晖系统"></a><h9 id="sys_install">安装群晖系统</h9></h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#下载系统文件</span></span><br><span class="line">wget http://down.nas2x.com/synology/dsm/6.2/6.2.0/ds3617_6.2/DSM_DS3617xs_23739.pat</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载群晖工具（Synology Assistant）</span></span><br><span class="line">https://www.synology.cn/zh-cn/support/download/DS3617xs<span class="comment">#utilities</span></span><br></pre></td></tr></table></figure></li></ol><p>修改发现的虚拟机mac地址<br><img src="/images/pasted-10.png" alt="upload successful"><br><img src="/images/pasted-11.png" alt="upload successful"></p><p>重启该虚拟机，再次用群晖助手搜索<br><img src="/images/pasted-12.png" alt="upload successful"></p><p>登陆网页版安装<br><img src="/images/pasted-13.png" alt="upload successful"></p><p>安装过程会格式化所有的虚拟磁盘，安装完后会自动重启<br><img src="/images/pasted-14.png" alt="upload successful"></p><h3 id="ubuntu部署vbox虚拟机"><a href="#ubuntu部署vbox虚拟机" class="headerlink" title="ubuntu部署vbox虚拟机 "></a><h9 id="linux">ubuntu部署vbox虚拟机</h9></h3><h4 id="安装linux版vbox"><a href="#安装linux版vbox" class="headerlink" title="安装linux版vbox"></a><h9 id="linux_install">安装linux版vbox</h9></h4><pre><code><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">   sudo sh -c <span class="string">'echo "deb http://download.virtualbox.org/virtualbox/debian $(lsb_release -sc) contrib" &gt;&gt; /etc/apt/sources.list.d/virtualbox.list'</span></span><br><span class="line">   </span><br><span class="line">   wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add -</span><br><span class="line">   </span><br><span class="line">   wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add -</span><br><span class="line">   </span><br><span class="line">   apt-get install virtualbox-6.0</span><br><span class="line">   </span><br><span class="line">   <span class="comment">#安装扩展包</span></span><br><span class="line">wget http://download.virtualbox.org/virtualbox/6.0.8/Oracle_VM_VirtualBox_Extension_Pack-6.0.8-130520.vbox-extpack</span><br><span class="line">   </span><br><span class="line">   VBoxManage expack install ./Oracle_VM_VirtualBox_Extension_Pack-6.0.8-130520.vbox-extpack</span><br></pre></td></tr></table></figure></code></pre><h4 id="注册虚拟机"><a href="#注册虚拟机" class="headerlink" title="注册虚拟机"></a><h9 id="regist">注册虚拟机</h9></h4><pre><code><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vboxmanage registervm /vms/syno/syno.vbox</span><br></pre></td></tr></table></figure></code></pre><h4 id="修改数据磁盘大小容量"><a href="#修改数据磁盘大小容量" class="headerlink" title="修改数据磁盘大小容量"></a><h9 id="vbox_modify">修改数据磁盘大小容量</h9></h4><pre><code><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vboxmanage modifyhd a81abcee-823e-4bd1-9964-e8de3460d7dd --resize 10248</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改网卡信息</span></span><br><span class="line"><span class="comment">#不同的机器的对应网卡是不同，需要修改</span></span><br><span class="line">VBoxManage modifyvm syno --nic1 bridged --nictype1 82540EM --cableconnected1 on --bridgeadapter1 p2p1</span><br><span class="line"></span><br><span class="line"><span class="comment">#无界面启动虚拟机</span></span><br><span class="line">vboxmanage  startvm syno --<span class="built_in">type</span>=headless</span><br></pre></td></tr></table></figure></code></pre><!-- rebuild by neat -->]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>虚拟机</tag>
        <tag>virtualbox</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo搜索安装</title>
    <url>/2019/05/16/hexo%E6%90%9C%E7%B4%A2%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>安装分为2个部分</p><ul><li>hexo搜索插件安装，没有使用第三方的平台，而是使用一个local search的方式，正好主题也支持这么搜索</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog/</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑hexo的_config.yml</span></span><br><span class="line">vim _config.xml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在结尾处增加如下配置,其实就是搜索xml的js方式。(- -)</span></span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure><ul><li>主题部分开启搜索</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog/theme/next/</span><br><span class="line">vim _config.xml</span><br><span class="line"></span><br><span class="line">搜索local_search关键字，将<span class="built_in">enable</span>改为<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>完成</p><!-- rebuild by neat -->]]></content>
  </entry>
  <entry>
    <title>hexo二级菜单修改</title>
    <url>/2019/05/15/hexo%E4%BA%8C%E7%BA%A7%E8%8F%9C%E5%8D%95%E4%BF%AE%E6%94%B9/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:16 GMT+0800 (GMT+08:00) --><p>next主题是我目前常用的主题,<a href="https://theme-next.org/docs/getting-started/" target="_blank" rel="noopener">官方文档</a>只是说了一级目录，但是二级怎么改似乎文档中没有提及。</p><p>next主题整体目录结构比较多，改页面结构只是用到layout目录中的对应文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog/</span><br><span class="line">vim themes/next/layout/_macro/menu/menu-item.swig</span><br></pre></td></tr></table></figure><p>在改之前先确认一个概念，hexo中我认为所谓的分类，其实就是二级目录，所以是否是分类就通过目录层级判断，以这个为核心概念，只要判断目录层级就好。</p><p><img src="/images/pasted-6.png" alt="upload successful"></p><p>修改后：</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#123;% macro render(name, value) %&#125;</span><br><span class="line">&#123;% <span class="keyword">import</span> <span class="string">'menu-badge.swig'</span> <span class="keyword">as</span> menu_badge %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% <span class="keyword">set</span> itemURL = value.split('||')[0] | trim %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> itemURL.indexOf(<span class="string">'http'</span>) != <span class="number">0</span> %&#125;</span><br><span class="line">    &#123;% <span class="keyword">set</span> itemURL = itemURL | replace('//', '/', 'g') %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"menu-item menu-item-&#123;&#123; itemName | replace(' ', '-', 'g') &#125;&#125;&#123;&#123; item_active(itemURL, 'menu-item-active') &#125;&#125;"</span>&gt;</span><br><span class="line"></span><br><span class="line">    &#123;% <span class="keyword">set</span> menuText = __('menu.' + name) | replace('menu.', '') %&#125;</span><br><span class="line">    &#123;% <span class="keyword">set</span> menuURL = itemURL %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> theme.menu_settings.icons %&#125;</span><br><span class="line">      &#123;% <span class="keyword">set</span> menuIcon = '&lt;i class="menu-item-icon fa fa-fw fa-' + value.split('||')[1] | trim | default('question-circle') + '"&gt;&lt;/i&gt; &lt;br/&gt;' %&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;% <span class="keyword">if</span> theme.menu_settings.badges %&#125;</span><br><span class="line">      &#123;% <span class="keyword">set</span> menuBadge = menu_badge.render(name) | trim %&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">     &lt;!-- 判断是否为二级目录,增加自定义css --&gt;</span><br><span class="line">    &#123;% <span class="keyword">set</span> tmp = menuURL.split('/')[2] %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> tmp.length&gt;<span class="number">1</span> %&#125;</span><br><span class="line">        &#123;&#123; next_url(menuURL, menuIcon + menuText + menuBadge, &#123;<span class="attr">rel</span>: <span class="string">'section'</span>,<span class="string">'class'</span>:<span class="string">'submenu-item'</span>&#125;) &#125;&#125;</span><br><span class="line">    &#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">        &#123;&#123; next_url(menuURL, menuIcon + menuText + menuBadge, &#123;<span class="attr">rel</span>: <span class="string">'section'</span>&#125;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">	&lt;!-- 判断是否为二级目录,增加自定义css --&gt;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#123;% endmacro %&#125;</span></span><br></pre></td></tr></table></figure><ul><li>我们在判断层级目录是二级后，在next_url的样式参数中增加了一个自定义样式参数</li></ul><p><img src="/images/pasted-7.png" alt="upload successful"></p><ul><li>增加自定义css</li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim themes/next/<span class="built_in">source</span>/css/_custom/custom.style</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改增加新的css样式</span></span><br><span class="line">.submenu-item &#123;</span><br><span class="line">  margin-left: 10%;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>修改主题配置文件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim theme/next/_config.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># 寻找menu部分,增加二级菜单</span></span><br><span class="line"></span><br><span class="line">menu:</span><br><span class="line">	home: / || home</span><br><span class="line">	about: /about/ || user</span><br><span class="line">	tags: /tags/ || tags</span><br><span class="line">	categories: /categories/ || th</span><br><span class="line">	学习笔记: /categories/学习笔记/ || book <span class="comment">#二级菜单</span></span><br></pre></td></tr></table></figure></li><li><p>完成后记得重新生成静态文件，否则自定义css文件不会被合并入main.css的主题css文件中</p></li></ul><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>Hexo修改笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>git教程资料</title>
    <url>/2019/05/13/git%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:16 GMT+0800 (GMT+08:00) --><p><a href="http://www.ruanyifeng.com/blog/2015/12/git-workflow.html" target="_blank" rel="noopener">git工作流程</a></p><blockquote><p>多人协作，做产品用的上</p></blockquote><p><a href="https://github.com/riku/Markdown-Syntax-CN/blob/master/syntax.md" target="_blank" rel="noopener">github markdown语法</a></p><blockquote><p>总容易忘记弄个备查</p></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>一些学习JS的资料地址</title>
    <url>/2019/05/13/%E4%B8%80%E4%BA%9B%E5%AD%A6%E4%B9%A0JS%E7%9A%84%E8%B5%84%E6%96%99%E5%9C%B0%E5%9D%80/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><ul><li><a href="http://es6.ruanyifeng.com" target="_blank" rel="noopener">ES6语法入门教程</a></li></ul><blockquote><p>es6的入门教程，涵盖了语言的大部分方面，都是一些入门知识，要更深入。只能将知识点一个个搜索更细节的东西，光入门是够了。</p></blockquote><ul><li><a href="https://www.liaoxuefeng.com/wiki/1022910821149312" target="_blank" rel="noopener">javascript全栈教程</a></li></ul><blockquote><p>感觉这本更泛，作为走马观花不错，可以了解各个知识点。</p></blockquote><ul><li><a href="https://cnodejs.org/topic/542953d42ca9451e1bf3c251" target="_blank" rel="noopener">拥抱Generator，告别异步回调</a></li></ul><blockquote><p>更详细的说明generator</p></blockquote><ul><li><a href="https://medium.com/@xyz030206/更強大的非同步模式-從generator到async-await-7235f24d00eb" target="_blank" rel="noopener">更強大的非同步模式：從Generator到Async Await</a></li></ul><blockquote><p>学了es6的generator、promise，够用，但是async要学总要知道为啥。这个能说明为什么</p></blockquote><ul><li><a href="http://www.ruanyifeng.com/blog/2015/04/generator.html" target="_blank" rel="noopener">深入掌握 ECMAScript 6 异步编程</a></li></ul><blockquote><p>异步编程众所纷纭，总是太多名词，这篇相对简单，先从弄清楚名词说起</p></blockquote><ul><li><a href="http://fengliner.github.io/2016/11/28/深入理解ES6异步编程/" target="_blank" rel="noopener">深入理解ES6异步编程</a></li></ul><blockquote><p>相对更简单的说明</p></blockquote><ul><li><a href="https://juejin.im/entry/5b076c0a51882538ac1cdb0b" target="_blank" rel="noopener">小议async/await和coroutine</a></li></ul><blockquote><p>js异步协程开发的几种常见方式的说明</p></blockquote><!-- rebuild by neat -->]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo安装过程</title>
    <url>/2019/05/11/Hexo%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:16 GMT+0800 (GMT+08:00) --><p>这里做个记录，<a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">安装&amp;github配置部分</a>内容参考网络上，<a href="https://hexo.io/themes/" target="_blank" rel="noopener">theme</a>部分按照个人的所找的theme配置吧。但一些基本的皮肤配置文件还是相同。</p><ul><li><a href="#local">安装hexo</a></li><li><a href="#github">github设置</a></li><li><a href="#normal_setup">常用设置</a></li><li><a href="#normal_command">常用命令</a></li><li><a href="#ext_setup">扩展包配置</a></li><li><a href="#theme">主题安装</a></li></ul><p><h9 id="local">安装hexo</h9></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 全局安装hexo命令行包</span></span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立hexo博客项目，会从远程获取一份hexo的代码并建立一个设定的目录，</span></span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog/</span><br><span class="line">npm init --yes 建立package.json为了后面安装扩展包准备</span><br><span class="line">npm install hexo-deployer-git --save <span class="comment">#安装推送命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#此时本地已经有一个blog目录,标准的结构</span></span><br><span class="line"></span><br><span class="line">├── _config.yml 			<span class="comment">#配置文件</span></span><br><span class="line">├── node_modules</span><br><span class="line">├── package-lock.json</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── <span class="built_in">source</span>					<span class="comment">#生成的markdown文件,域名映射文件，自定义目录配置</span></span><br><span class="line">└── themes					<span class="comment">#主题</span></span><br></pre></td></tr></table></figure><p><h9 id="github">github配置</h9></p><ol><li>登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册<a href="https://github.com/" target="_blank" rel="noopener">GitHub帐号</a>，点击GitHub中的New repository创建新仓库，仓库名应该为：注册用户名.github.io 这个用户名使用你的GitHub帐号名称代替，这是固定写法。因为只有这样才能确保 注册用户名.github.io 访问到对应的仓库.</li></ol><p>例如本日志的仓库配置</p><p><img src="/images/pasted-2.png" alt="upload successful"></p><ol start="2"><li>增加自己的域名别名（非必须）</li></ol><p>不是每个人都想用github.io后缀，这年代大家都想个性化，用自己的域名，比如我就用<a href="http://blog.all-soon.com" target="_blank" rel="noopener">blog.all-soon.com</a>.github也支持这样的配置。</p><p>如图，在仓库的这部分增加别名的配置</p><p><img src="/images/pasted-3.png" alt="upload successful"></p><p>配置后，请去自己的域名的dns配置中，将该域名指向 注册用户名.github.io 这个域名，这样才能确保生效.</p><p><img src="/images/pasted-4.png" alt="upload successful"></p><p><h9 id="normal_setup">hexo常用设置</h9></p><p>做完github配置后，对应的二级域名也已经出现，现在可以对hexo做常规的配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 基础配置,将本地与github链接</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑_config.yml </span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改下面这些信息</span></span><br><span class="line"></span><br><span class="line">title: 博客名</span><br><span class="line">subtitle: 子标题</span><br><span class="line">description:				<span class="comment">#seo所用部分</span></span><br><span class="line">keywords:</span><br><span class="line">author: </span><br><span class="line">language: zh-CN				<span class="comment">#默认语言</span></span><br><span class="line">timezone: Asia/Shanghai 	<span class="comment">#所在时区</span></span><br><span class="line">url: http://注册用户名.github.io	<span class="comment">#对应github上的配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送（我这里用的ssh方式，你也可以用http方式</span></span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line"> <span class="built_in">type</span>: git</span><br><span class="line"> repo: git@github.com:注册用户名/blog.git</span><br><span class="line"> branch: master</span><br></pre></td></tr></table></figure><p><h9 id="normal_command">hexo常用命令</h9></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo g == hexo generate <span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy <span class="comment">#部署</span></span><br><span class="line">hexo clean <span class="comment">#清除缓存</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#hexo s 启动后，我们可以通过http://localhost:4000这个地址访问网页</span></span><br></pre></td></tr></table></figure><p><h9 id="ext_setup">扩展包配置</h9></p><ol><li>RSS配置<br>通过rss，可以让别人轻松收藏你的站点，并定时更新更新站点内容，而不是每次都要用游览器访问。在资讯泛滥的年代，我们越来越受到来自网络噪音，而订阅rss则是个不错的方式，关注自己想要的，而不是被动的接受推送。</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#进入hexo安装目录</span></span><br><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><ol start="2"><li>内容发布后台<br>hexo通过命令生成文件，按照md语法编写文件，推送仓库这个方式来发布内容。每次都是通过命令行总是太乏味。安装内容发布后台就是个不错的方式。</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-admin --save</span><br></pre></td></tr></table></figure><p>安装后通过hexo s 启动本地预览博客后，就可以在<a href="http://localhost:4000/admin" target="_blank" rel="noopener">http://localhost:4000/admin</a> 路径下获得内容管理。</p><p><img src="/images/pasted-5.png" alt="upload successful"></p><p><h9 id="theme">主题安装</h9></p><p>hexo官方有非常多的<a href="https://hexo.io/themes/" target="_blank" rel="noopener">主题</a>可以使用。</p><p>hexo目录中有个theme目录，安装主题通过git主题的仓库中的代码同步到本地theme目录下。</p><p>安装举例</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改本地配置文件，将主题设置</span></span><br><span class="line"></span><br><span class="line">vim _config.yml</span><br><span class="line"></span><br><span class="line">theme: next</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
  </entry>
  <entry>
    <title>Generator的一些想法</title>
    <url>/2019/05/10/Generator%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:16 GMT+0800 (GMT+08:00) --><p>Generator 看了一下午，想明白了就是一个能存储当前某一刹那状态的函数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//特殊的函数用*标记</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">fn5</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> x=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(x) &#123;</span><br><span class="line">        <span class="keyword">yield</span>(x++);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义后，每次next()会再yield之前运行停止,下一次调用就从yield后运行至下一个yield之前</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c = fn5();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(c.next().value);	<span class="comment">// 1</span></span><br><span class="line"><span class="built_in">console</span>.log(c.next().value);	<span class="comment">// 2</span></span><br><span class="line"><span class="built_in">console</span>.log(c.next().value);	<span class="comment">// 3</span></span><br></pre></td></tr></table></figure><p>可以用这种暂停作为异步的执行，当异步执行时候暂停，等到异步停止后，用next()继续执行</p><p>结合之前的Promise，可以在异步中这样执行。</p><ol><li>建立一个Promise，并设定resolve和reject函数</li><li>yield停在Promise实例对象前</li><li>实例化yield相关的函数，执行next，然后value中返回的实例化的promise中执行操作</li></ol><p>具体代码:</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Generator+ Promise组合</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> url = <span class="string">"'http://httpbin.org/get'"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> test = <span class="function"><span class="params">url</span>=&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve,reject</span>)</span>&#123;</span><br><span class="line">        request(</span><br><span class="line">            url,</span><br><span class="line">            <span class="function"><span class="keyword">function</span>(<span class="params">err, response, body</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(!err &amp;&amp; response.statusCode == <span class="number">200</span>) &#123; </span><br><span class="line">                    resolve(body);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    reject(err);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fh7 = <span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> result = <span class="keyword">yield</span> test(<span class="string">'http://httpbin.org/get'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> e = fh7();</span><br><span class="line"><span class="keyword">var</span> p = e.next().value;</span><br><span class="line">p.then(<span class="function">(<span class="params">data</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>异步执行</tag>
      </tags>
  </entry>
  <entry>
    <title>对于学习目前的一些想法-想到什么说什么。</title>
    <url>/2019/05/09/%E5%AF%B9%E4%BA%8E%E5%AD%A6%E4%B9%A0%E7%9B%AE%E5%89%8D%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>学习都是从碎片开始，目前学的语言都是从主干部分，现在学，慢慢再丰富枝干部分。边学边做，以完成任务的为学习目的，然后再基于主干的知识，根据手册资料，慢慢扩展。</p><!-- rebuild by neat -->]]></content>
  </entry>
  <entry>
    <title>promise用法</title>
    <url>/2019/05/09/promise%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p>原本层层嵌套改为多个then和catch连写的方式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span>  request = <span class="built_in">require</span>(<span class="string">'request'</span>);</span><br><span class="line"><span class="keyword">var</span>  url = <span class="string">"'http://httpbin.org/get'"</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">	<span class="comment">// 语法检查</span></span><br><span class="line"><span class="meta">    "use strict"</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">resolve,reject</span>)</span>&#123;</span><br><span class="line">        request(</span><br><span class="line">            url,</span><br><span class="line">            <span class="function"><span class="keyword">function</span>(<span class="params">err, response, body</span>)</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(!err &amp;&amp; response.statusCode == <span class="number">200</span>) &#123; </span><br><span class="line">                    resolve(body);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    reject(err);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">test(<span class="string">'http://httpbin.org/get'</span>)</span><br><span class="line">    .then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> value;</span><br><span class="line">    &#125;)</span><br><span class="line">    .then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// console.log(22222);</span></span><br><span class="line">        <span class="comment">// console.log(value);</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//语法糖方式</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> prom = <span class="built_in">Promise</span>.resolve(</span><br><span class="line"></span><br><span class="line">	<span class="comment">//返回的是promise对象，这里远程get方式无法调用</span></span><br><span class="line">    request(url,<span class="function"><span class="keyword">function</span>(<span class="params">err, response, body</span>)</span>&#123;&#125;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">prom.then(<span class="function"><span class="keyword">function</span>(<span class="params">value</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// console.log(value.uri);</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 只要抛错误就直接调用catch</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">task1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'task1'</span>);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'error test'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">task2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'task2'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">err</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'err'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> prom = <span class="built_in">Promise</span>.resolve(<span class="string">'aaaaa'</span>);</span><br><span class="line"><span class="comment">// prom.then(task1).then(task2).catch(err);</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>es6</tag>
      </tags>
  </entry>
  <entry>
    <title>npm 使用</title>
    <url>/2019/05/09/npm-%E5%AE%89%E8%A3%85%E5%BA%93/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><p><a href="https://www.npmjs.com/中搜索" target="_blank" rel="noopener">https://www.npmjs.com/中搜索</a></p><ol><li>安装一些第三方库</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">//本地安装，安装到项目目录下，不在package.json中写入依赖</span><br><span class="line">npm install packageName</span><br><span class="line"></span><br><span class="line">//全局安装，安装在Node安装目录下的node_modules下</span><br><span class="line">npm install packageName -g</span><br><span class="line"></span><br><span class="line">//安装到项目目录下，并在package.json文件的dependencies中写入依赖，简写为-S</span><br><span class="line">npm install packageName --save</span><br><span class="line"></span><br><span class="line">//安装到项目目录下，并在package.json文件的devDependencies中写入依赖，简写为-D</span><br><span class="line">npm install packageName --save-dev</span><br></pre></td></tr></table></figure><p>目前一般只是用 –save版本</p><ol start="2"><li>安装后引入</li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> 变量名称 = <span class="built_in">require</span>(<span class="string">'类库名称'</span>);</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>我的nodejs配置</title>
    <url>/2019/05/09/%E6%88%91%E7%9A%84nodejs%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><h6 id="涵盖了基本安装-sublime的配置"><a href="#涵盖了基本安装-sublime的配置" class="headerlink" title="涵盖了基本安装+sublime的配置"></a>涵盖了基本安装+sublime的配置</h6><ol><li>nvm、npm、node环境安装</li></ol><p>基本都是老生常谈的内容，主要还是用cnpm、cnvm等，用国内的阿里的源安装。之前尝试了brew安装方式。但发现nvm默认是没有安装，再弄也比较麻烦。正好有需要学习一下，就uninstall完直接安装了。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 官网直接安装</span></span><br><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash\n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换国内源</span></span><br><span class="line"></span><br><span class="line">vim ~/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加npm源</span></span><br><span class="line"><span class="built_in">export</span> NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加npm别名，当然也可以用阿里源的直接安装</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> cnpm=<span class="string">"npm --registry=https://registry.npm.taobao.org \</span></span><br><span class="line"><span class="string">  --cache=<span class="variable">$HOME</span>/.npm/.cache/cnpm \</span></span><br><span class="line"><span class="string">  --disturl=https://npm.taobao.org/dist \</span></span><br><span class="line"><span class="string">  --userconfig=<span class="variable">$HOME</span>/.cnpmrc"</span></span><br></pre></td></tr></table></figure><ol start="2"><li>sublime 配置</li></ol><p>主要用到的Nodejs、JSHint Gutter 2个插件。Nodejs用来build代码，也就是command+b用到那个。JSHint则用来语法的校验。</p><p>nodejs build 安装</p><ul><li>command+shift+p,搜索nodejs安装</li><li>package setting-&gt;settings-User</li><li>设置node和npm的位置，如果不知道那个位置可以用which npm来确认</li></ul><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	&quot;node_command&quot;: &quot;&#x2F;Users&#x2F;mini&#x2F;.nvm&#x2F;versions&#x2F;node&#x2F;v12.2.0&#x2F;bin&#x2F;node&quot;,</span><br><span class="line">	&quot;npm_command&quot;: &quot;&#x2F;Users&#x2F;mini&#x2F;.nvm&#x2F;versions&#x2F;node&#x2F;v12.2.0&#x2F;bin&#x2F;npm&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>jshint插件</p><p>jshint 有点像python的中的书写规范，通过修改配置可以设定不同的书写规范并加以校验</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line"></span><br><span class="line">npm install -g jshint</span><br><span class="line"><span class="built_in">command</span>+<span class="built_in">shift</span>+p,搜索jshint gutter安装</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line"></span><br><span class="line">package setting-&gt;setting-options</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="string">"node_path"</span>: &#123;</span><br><span class="line">    <span class="string">"windows"</span>: <span class="string">"C:/Program Files/nodejs/node.exe"</span>,</span><br><span class="line">    <span class="string">"linux"</span>: <span class="string">"/usr/bin/nodejs"</span>,</span><br><span class="line">    <span class="string">"osx"</span>: <span class="string">"/Users/mini/.nvm/versions/node/v12.2.0/bin/node"</span></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="string">"lint_on_edit"</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">  <span class="string">"lint_on_edit_timeout"</span>: 1,</span><br><span class="line"></span><br><span class="line">  <span class="string">"lint_on_load"</span>: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">  // 保存时检测</span><br><span class="line">  <span class="string">"lint_on_save"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">  //高亮选中的部分</span><br><span class="line">  <span class="string">"highlight_selected_regions"</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">  // 通过`.jshintrc`.配置</span><br><span class="line">  <span class="string">"print_diagnostics"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">package setting-&gt;line-code</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我改的不多几乎是用默认的，也是懒得折腾那么多。毕竟这个可以通过之后的学习在逐步理解。</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="string">"browser"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"esnext"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"globals"</span>: &#123;&#125;,</span><br><span class="line">  <span class="string">"strict"</span>: <span class="string">"global"</span>,</span><br><span class="line">  <span class="string">"undef"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"unused"</span>: <span class="literal">true</span>,</span><br><span class="line">  //增加对es5的支持</span><br><span class="line">  <span class="string">"es5"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"node"</span>: <span class="literal">true</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刚开始学我也不想枝节上扯太多，还是重点在语言本身，感觉和小程序的写法有相似的地方，不过也是，不都是js嘛 –!</p><!-- rebuild by neat -->]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title>从这里开始</title>
    <url>/2019/05/08/test-page/</url>
    <content><![CDATA[<!-- build time:Tue Mar 03 2020 13:09:17 GMT+0800 (GMT+08:00) --><h6 id="刚开始写"><a href="#刚开始写" class="headerlink" title="刚开始写"></a>刚开始写</h6><p>希望有不错的开始，不太想用evernote的版本。如果不被墙，基本就选择这里。</p><!-- rebuild by neat -->]]></content>
  </entry>
</search>
