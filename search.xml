<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[科幻小说有感]]></title>
    <url>%2F2020%2F03%2F02%2F%E7%A7%91%E5%B9%BB%E5%B0%8F%E8%AF%B4%E6%9C%89%E6%84%9F%2F</url>
    <content type="text"><![CDATA[肺炎肆虐了几个月，也终有有点时间看看所谓的闲书。当然其实也是排除一些焦躁。]]></content>
      <categories>
        <category>life</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[FFmpeg常用基本命令]]></title>
    <url>%2F2020%2F03%2F02%2Fffmpeg%E5%B8%B8%E7%94%A8%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[FFmpeg常用基本命令常用参数说明主要参数1234567891011121314-i 设定输入流 -f 设定输出格式 -ss 开始时间 视频参数： -b 设定视频流量，默认为200Kbit/s -r 设定帧速率，默认为25 -s 设定画面的宽与高 -aspect 设定画面的比例 -vn 不处理视频 -vcodec 设定视频编解码器，未设定时则使用与输入流相同的编解码器 音频参数： -ar 设定采样率 -ac 设定声音的Channel数 -acodec 设定声音编解码器，未设定时则使用与输入流相同的编解码器 -an 不处理音频手头常用12345678910111213141516171819202122232425262728293031323334//按照固定高宽截取//宽：1202//高：677//0 左右要去掉宽度//130 上下要去掉的宽度ffmpeg -i video.mp4 -vf crop=1202:677:0:130 -c:a copy video3.mp4//截取部分时间//-ss 开始时间//-t 结束时间ffmpeg -ss 00:00:09 -t 00:02:13 -i ScreenFlow11.mp4 -vcodec copy -acodec copy t.mp4//转大小 iphone maxffmpeg -i EP02.mp4 -strict -2 -vf scale=1242:-2 2.mp4//转720pffmpeg -i EP02.mp4 -strict -2 -vf scale=-2:720 2.mp4//640x480ffmpeg -i input.avi -s 640x480 output.avi//vga分辨率ffmpeg -i input.avi -strict -2 -s vga output.avi//字幕导入ffmpeg -i 1.mkv -metadata title="步履不停" -strict -2 \vf subtitles=1.srt -metadata:s:s:0 language=chs out.mp4//从mkv转MP4，并用mkv中的中文字幕和视频音频合成ffmpeg -i input.mkv -filter_complex "[0:v:0]subtitles=input.mkv:si=5[v]" \metadata title="星球大战4新希望" -map "[v]" -map 0:a:0 -c:a copy output.mp4常规使用组合分离视频音频流123//分离视频流ffmpeg -i input_file -vcodec copy -an output_file_video ffmpeg -i input_file -acodec copy -vn output_file_audio视频解复用123//分离音频流ffmpeg –i test.mp4 –vcodec copy –an –f m4v test.264ffmpeg –i test.avi –vcodec copy –an –f m4v test.264视频转码123456789//转码为码流原始文件ffmpeg –i test.mp4 –vcodec h264 –s 352*278 –an –f m4v test.264 //转码为码流原始文件ffmpeg –i test.mp4 –vcodec h264 –bf 0 –g 25 –s 352*278 –an –f m4v test.264//转码为封装文件//-bf B帧数目控制，-g 关键帧间隔控制，-s 分辨率控制ffmpeg –i test.avi -vcodec mpeg4 –vtag xvid –qsame test_xvid.avi视频封装1ffmpeg –i video_file –i audio_file –vcodec copy –acodec copy output_file视频剪切123456//提取图片ffmpeg –i test.avi –r 1 –f image2 image-%3d.jpeg//剪切视频//-r 提取图像的频率，-ss 开始时间，-t 持续时间ffmpeg -ss 0:1:30 -t 0:0:20 -i input.avi -vcodec copy -acodec copy output.avi视频录制1ffmpeg –i rtsp://192.168.3.205:5555/test –vcodec copy out.avi抓屏1234567ffmpeg -f gdigrab -i desktop out.mpg //从屏幕的（10,20）点处开始，抓取640x480的屏幕，设定帧率为5 ：ffmpeg -f gdigrab -framerate 5 -offset_x 10 -offset_y 20 -video_size 640x480 -i desktop out.mpg //ffmpeg从视频中生成gif图片：ffmpeg -i capx.mp4 -t 10 -s 320x240 -pix_fmt rgb24 jidu1.gif格式转换12345678//M2TS TO MP4ffmpeg -i input.m2ts -vcodec libx264 -crf 20 -acodec ac3 -vf "yadif" output.mp4//MP4 TO WEBM (HIGH)ffmpeg -i input.mp4 -aq 5 -ac 2 -qmax 25 -threads 2 output.webm//MP4 TO WEBM (MEDIUM)ffmpeg -i input.mp4 -aq 5 -ac 2 -qmax 35 -threads 2 output.webm]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>ffmpeg</tag>
        <tag>视频转码</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[laravel 数据库查询器]]></title>
    <url>%2F2020%2F03%2F01%2Flaravel-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E5%99%A8%2F</url>
    <content type="text"><![CDATA[插入数据库1Companyauth::insert($data);更新1Companyauth::where(&apos;uid&apos;,$uid)-&gt;update($data);查询1Companyauth::where(&apos;uid&apos;,$uid)-&gt;find(1);orderBy和limit组合1Companyauth::orderBy(&apos;id&apos;,&apos;desc&apos;)-&gt;take(6)-&gt;get();where条件12Newsinformation::where(&apos;id&apos;,&apos;&lt;&apos;,$id)-&gt;first();Orderbook::where(&apos;buyId&apos;,$uid)-&gt;get();left join123$prdList = Product::where(&apos;product.type&apos;,2) -&gt;leftjoin(&apos;companyauth&apos;,&apos;companyauth.uid&apos;,&apos;=&apos;,&apos;product.uid&apos;) -&gt;orderBy(&apos;product.id&apos;,&apos;desc&apos;)-&gt;get();从配置文件读取数据1$choiseType = Config::get(&apos;user.choicetype&apos;);单一纪录1Newsinformation::where(&apos;id&apos;,&apos;&lt;&apos;,$id)-&gt;first();]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>laravel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[nodejs 常驻后台 pm2 使用]]></title>
    <url>%2F2020%2F03%2F01%2Fnodejs-%E5%B8%B8%E9%A9%BB%E5%90%8E%E5%8F%B0-pm2-%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[什么是pm2pm2是一个用node编写的进程管理工具，它不仅可以用来管理node进程，任何进程相关的东西都可以使用pm2来进行管理安装pm2npm install pm2常规使用开启进程pm2 start app.jspm2 list 查看当前被pm2所管理的进程查看日志pm2 log关闭所有进程pm2 stop all重新加载进程pm2 reload app_name删除进程pm2 delete app_name]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>运维</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[多个ssh key配置]]></title>
    <url>%2F2020%2F03%2F01%2F%E5%A4%9A%E4%B8%AAssh-key%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[生成新的key1ssh-keygen -t rsa -f ~/.ssh/id_rsa.github -C &quot;你的邮箱&quot;修改ssh的配置文件，如果没有就新建一个1vim ~/.ssh/config配置不同的key指向不同的git仓库服务器12345678910#github Host github.com HostName github.com PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa.blog.github#gitee Host gitee.com HostName gitee.com PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa测试1ssh -T git@github.com]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[MySQL备份脚本]]></title>
    <url>%2F2020%2F03%2F01%2FMySQL%E5%A4%87%E4%BB%BD%E8%84%9A%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[云主机厂商都有自己的RDS系统，自然那是万无一失，但费用可真不便宜，一般还是喜欢自己备份一下。这里是一段备份脚本。放在cron中自动执行。12345678910111213141516171819202122232425262728293031323334353637#!/bin/bash#备份目录BACKUP_ROOT=/srv/backupBACKUP_FILEDIR=$BACKUP_ROOT/filesBACKUP_LOGDIR=$BACKUP_ROOT/logs#当前日期DATE=$(date +%Y%m%d)FILEEXT=$(date +%Y%m%d%H)if [ ! -d $BACKUP_FILEDIR/$DATE ];then mkdir $BACKUP_FILEDIR/$DATEfi######备份#######查询所有数据库DATABASES=$(mysql -u用户名 -h 网络IP -p密码 -e "show databases" | grep -Ev "Database|sys|information_schema")#echo $DATABASES#循环数据库进行备份for db in $DATABASESdo echo echo ----------$BACKUP_FILEDIR/$DATE/$&#123;db&#125;_$FILEEXT.sql.gz BEGIN---------- mysqldump -u用户名 -h 网络IP -p密码 \ --default-character-set=utf8 -q --lock-all-tables \ --flush-logs -E -R --triggers -B $&#123;db&#125; \ | gzip &gt; $BACKUP_FILEDIR/$DATE/$&#123;db&#125;_$FILEEXT.sql.gz echo ----------$BACKUP_FILEDIR/$DATE/$&#123;db&#125;_$FILEEXT.sql.gz COMPLETE---------- echodoneecho "done"cron中设置备份频段，建议再加上远程传输，做成异地备份]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>数据备份</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mac 多版本php共存]]></title>
    <url>%2F2020%2F02%2F29%2Fmac-%E5%A4%9A%E7%89%88%E6%9C%ACphp%E5%85%B1%E5%AD%98%2F</url>
    <content type="text"><![CDATA[MAC上安装有多个不同的PHP网站，要求必须在PHP5.6、PHP7.1+，并且需要安装xdebug扩展。操作1）先安装PHP56 PHP7112brew install php@5.6brew install php@7.3安装好之后，去修改他们php-fpm的绑定端口，然后执行brew services restart php@5.6 这样，启动2）安装扩展必须确认目录是否存在 /usr/local/lib/php/pecl12/usr/local/opt/php@7.1/bin/pecl install http://pecl.php.net/get/xdebug-2.9.2.tgz/usr/local/opt/php@5.6/bin/pecl install http://pecl.php.net/get/xdebug-2.5.5.tgz3）修改对应的php.ini添加extension扩展so4）修改php-fpm端口www.conflistening 端口5）启动服务12brew services restart php@5.6 brew services restart php@7.1]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>php</tag>
        <tag>mac</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo server状态怎么常驻后台]]></title>
    <url>%2F2020%2F02%2F29%2Fhexo-server%E7%8A%B6%E6%80%81%E6%80%8E%E4%B9%88%E5%B8%B8%E9%A9%BB%E5%90%8E%E5%8F%B0%2F</url>
    <content type="text"><![CDATA[刚刚批发学来，转载一下12#安装pm2npm install -g pm2在博客根目录下面创建一个hexo_run.js12345678910//runconst &#123; exec &#125; = require('child_process')exec('hexo server',(error, stdout, stderr) =&gt; &#123; if(error)&#123; console.log('exec error: $&#123;error&#125;') return &#125; console.log('stdout: $&#123;stdout&#125;'); console.log('stderr: $&#123;stderr&#125;');&#125;)运行脚本1pm2 start hexo_run.js转载地址：https://blog.csdn.net/Tangcuyuha/article/details/80331169]]></content>
      <categories>
        <category>技术</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Node.js 事件驱动模型]]></title>
    <url>%2F2019%2F12%2F02%2FNode-js-%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E6%A8%A1%E5%9E%8B%2F</url>
    <content type="text"><![CDATA[运行过程主线程执行 node 代码，将代码加入队列中执行同步操作代码同步执行完成后，执行异步代码异步分为两种IO1：会从线程池取一条子线程来帮助主线程执行非IO2 ： 判断能否执行，能执行加入队列，不能就跳过主线程会一直循环，直到队列中没有代码后，主线程才会退出1) IO 即 input 和 out，指有数据操作2) 无数据操作，例如定时器 setTimeOut()子线程主要用来执行异步操作无任务时放在线程池中休息有异步IO操作，执行异步的IO操作执行完成后的子线程会把IO操作的回调，扔回给队列]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[微信小程序-常用自定义函数]]></title>
    <url>%2F2019%2F09%2F25%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%B8%B8%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[ajax1234567891011121314151617const ajaxPromisify = function(options=&#123;&#125;) &#123; return new Promise((resolve,reject) =&gt; &#123; wx.showLoading(&#123;title: '加载中'&#125;); wx.request(&#123; url: options.url, method: options.method, data: options.data, success:function(res)&#123; wx.hideLoading(); resolve(res); &#125;, fail:function(res)&#123; reject(res); &#125; &#125;); &#125;);&#125;;用户认证信息获取，没有获取到就弹框12345678910111213const userPromisify = function() &#123; return new Promise((resolve,reject) =&gt; &#123; wx.getUserInfo(&#123; success:function(res)&#123; resolve(res); &#125;, withCredentials:true, fail:function(res)&#123; reject(res); &#125; &#125;); &#125;);&#125;;微信登陆12345678910111213const wxLogin = function() &#123; return new Promise((resolve,reject) =&gt; &#123; wx.login(&#123; success:function(res)&#123; resolve(res); &#125;, withCredentials:true, fail:function(res)&#123; reject(res); &#125; &#125;); &#125;);&#125;判断某些权限是否获取到12345678910111213141516const authSettingPromisify = function(authtype) &#123; return new Promise((resolve,reject) =&gt; &#123; wx.getSetting(&#123; success(res) &#123; if (!res.authSetting[authtype]) &#123; resolve(false); &#125;else &#123; resolve(true); &#125; &#125;, fail(err) &#123; reject(err); &#125; &#125;); &#125;);&#125;;]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序-跳转-本地获取存储-手机号验证]]></title>
    <url>%2F2019%2F09%2F24%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E8%B7%B3%E8%BD%AC-%E8%8E%B7%E5%8F%96%E5%AD%98%E5%82%A8%2F</url>
    <content type="text"><![CDATA[获取本地存储12345//获取本地存储wx.getStorageSync("SysInfo").permission.title;//设置本地存储wx.setStorageSync("UserID", data.data.user_id);跳转12345//直接跳转并不删除当前页面wx.navigateTo(&#123;'url':'/pages/shop/c/register/register'&#125;);//删除当前页面并跳转wx.redirectTo(&#123;'url':'/pages/shop/c/register/register'&#125;);手机号验证1234const phoneVerification = function(phone) &#123; let reg = /^(((13[0-9]&#123;1&#125;)|(15[0-9]&#123;1&#125;)|(18[0-9]&#123;1&#125;)|(17[0-9]&#123;1&#125;))+\d&#123;8&#125;)$/; return reg.test(phone);&#125;]]></content>
      <categories>
        <category>技术</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序-弹框插件]]></title>
    <url>%2F2019%2F09%2F24%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E5%BC%B9%E6%A1%86%2F</url>
    <content type="text"><![CDATA[123456789101112131415161718192021222324252627// 下载git clone git@github.com:konggeyuan/popup.git//json文件定义"usingComponents": &#123; "zx-popup": "/components/zx-popup/index"&#125;//页面&lt;button bindtap="bottomPop"&gt;显示bottom弹框&lt;/button&gt;//弹框界面&lt;zx-popup popup-visible="&#123;&#123; bottom &#125;&#125;" zx-position="&#123;&#123;'bottom'&#125;&#125;" bind:popupStatus="popupChange"&gt; &lt;view class="wrap bottom"&gt;显示bottom弹框&lt;/view&gt;&lt;/zx-popup&gt;//调用bottomPop() &#123; this.setData(&#123; bottom: true &#125;);&#125;,//状态eventspopupChange() &#123; console.log(this.data.bottom);&#125;,]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[微信小程序-环境标题设置]]></title>
    <url>%2F2019%2F09%2F24%2F%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F-%E7%8E%AF%E5%A2%83%E6%A0%87%E9%A2%98%E8%AE%BE%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[1234567891011//首页标题data = &#123;"type":"title","position":&#123;"type":"wx-title","value":"user"&#125;&#125;; wx.request(&#123; method:'POST', url: utils.restfulUrl+"layout", data: JSON.stringify(data), success: (&#123; data &#125;) =&gt; &#123; that.setData(&#123; title: data.data[0].title || [] &#125;); wx.setNavigationBarTitle(&#123;title: data.data[0].title&#125;); &#125; &#125;);1234567891011console.log('列表导航');data = &#123;"type":"title","position":&#123;"type":"wx-nav-user"&#125;&#125;;wx.request(&#123; method:'POST', url: utils.restfulUrl+"layout", data: JSON.stringify(data), success: (&#123; data &#125;) =&gt; &#123; // console.log(data.data); that.setData(&#123; subObj: data.data || [] &#125;); &#125;&#125;);1234567891011//首页标题data = &#123;"type":"title","position":&#123;"type":"wx-title","value":"user"&#125;&#125;; wx.request(&#123; method:'POST', url: utils.restfulUrl+"layout", data: JSON.stringify(data), success: (&#123; data &#125;) =&gt; &#123; that.setData(&#123; title: data.data[0].title || [] &#125;); wx.setNavigationBarTitle(&#123;title: data.data[0].title&#125;); &#125; &#125;);123 // 用户是否登陆let userObj = wx.getStorageSync("user_info") || false;that.setData(&#123;userObj:userObj&#125;);12345678appInstance.loginStat();console.log(&apos;登陆状态&apos;);appInstance.sysInfo();console.log(&apos;系统环境信息&apos;);appInstance.tabBar();console.log(&apos;底部导航&apos;);]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>小程序</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[layui常用部件]]></title>
    <url>%2F2019%2F09%2F12%2Flayui-table%E5%B8%B8%E7%94%A8%2F</url>
    <content type="text"><![CDATA[静态表格1234567891011121314151617181920212223&lt;table lay-size="sm" class="layui-table"&gt; &lt;!-- 定义单元格高宽 --&gt; &lt;colgroup&gt; &lt;col width="10"&gt; &lt;col width="300"&gt; &lt;col&gt; &lt;/colgroup&gt; &lt;!-- 定义第一行高宽 --&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;&lt;/th&gt; &lt;th&gt;&#123;$lang.card_sn&#125;&lt;/th&gt; &lt;th&gt;&#123;$lang.user_phone&#125;&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;!-- &#123;foreach from=$cards item=card&#125; --&gt; &lt;tr&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt;&lt;/table&gt;form表单12345678910111213&lt;!--文本框--&gt; &lt;input type="text" name="points" value="" placeholder="" autocomplete="off" class="layui-input" /&gt;&lt;!--文本域--&gt;&lt;textarea name="desc" placeholder="请输入内容" class="layui-textarea"&gt;&lt;/textarea&gt;&lt;!--加按钮标记的图标--&gt;&lt;button id="card_edit" type="button" class="layui-btn layui-btn-sm layui-bg-cyan" title="&#123;$lang.edit&#125;"&gt; &lt;i class="layui-icon"&gt;&amp;#xe642;&lt;/i&gt;&lt;/button&gt;layui-btn-normal 普通蓝色按钮layui-btn-danger 红色警告按钮]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>layui</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[laravel 数据库查询器常用]]></title>
    <url>%2F2019%2F09%2F11%2Flaravel%E6%9F%A5%E8%AF%A2%E5%99%A8%2F</url>
    <content type="text"><![CDATA[连表查询、排序123456789101112$fields = ['op.id','op.product_id','op.product_number as num','pd.image','op.name','op.order_id'];DB::table('order_product as op') -&gt;select($fields) -&gt;leftJoin('product as pd', 'pd.id', '=', 'op.product_id') -&gt;where('op.order_id',$orderId) -&gt;orderBy('id','desc') -&gt;limit(6) -&gt;get();单一查询1234DB::table('video')-&gt;select($fields) -&gt;where('id',$vid) -&gt;first();自减123DB::table('product') -&gt;where('id',$pid) -&gt;decrement('gift_amount',$num);更新1234DB::table('product') -&gt;where('id',$pid) -&gt;where('amount','&lt;=',0) -&gt;update($fields);添加返回idDB::table('comment') -&gt;insertGetId($fields);]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>laravel</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js操作json的常用函数]]></title>
    <url>%2F2019%2F09%2F05%2Fjs%E6%93%8D%E4%BD%9Cjson%E7%9A%84%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0%2F</url>
    <content type="text"><![CDATA[JSON.stringify() 从一个对象中解析出字符串JSON.stringify({“a”:”1”,”b”:”2”})结果是：”{“a”:”1”,”b”:”2”}”JSON.parse()从一个字符串中解析出JSON对象var str = ‘{“a”:”1”,”b”:”2”}’;JSON.parse(str);结果是：Object{a:”1”,b:”2”}]]></content>
      <categories>
        <category>前端</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[mysql 随机数&日常用户序列号]]></title>
    <url>%2F2019%2F09%2F05%2Fmysql-%E9%9A%8F%E6%9C%BA%E6%95%B0-%E6%97%A5%E5%B8%B8%E7%94%A8%E6%88%B7%E5%BA%8F%E5%88%97%E5%8F%B7%2F</url>
    <content type="text"><![CDATA[日常随机数123456789101112//产生0到1000间的随机数 SELECT RAND() * 10000; // 增加取整SELECT FLOOR(RAND() * 10000) // 产生1000-10000间的整形 SELECT FLOOR( 1000 + RAND() * (10000 - 1000)) // 日常用户序列号,头部参数+1000~9999之间的随机数+时间戳，md5后值concat(&apos;TZ-&apos;,md5(concat(FLOOR(1000 + RAND() * (10000 - 1000)),UNIX_TIMESTAMP())))]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql</tag>
        <tag>随机数</tag>
        <tag>序号生成</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[jquery-ajax常用]]></title>
    <url>%2F2019%2F09%2F05%2Fjquery-ajax%E5%B8%B8%E7%94%A8%2F</url>
    <content type="text"><![CDATA[与后端交互，直接json串，省去传统的一个个参数post12345678910111213141516171819202122// 设定json结构let postData = &#123; "userTel": $("#user_info").val(), "cardSN": cardSN&#125;;// 生成jsonpostData = JSON.stringify(postData);// 提交$.ajax(&#123; url: URL, dataType: "json", type: "post", data:postData, // 成功返回 success:function(data)&#123; &#125;&#125;);php端123456// 直接接收data = trim(file_get_contents('php://input', 'r'));// 解析$data = json_decode($data);]]></content>
  </entry>
  <entry>
    <title><![CDATA[layui&jquery-autocomplete组合]]></title>
    <url>%2F2019%2F09%2F04%2Flayui-jquery-autocomplete%E7%BB%84%E5%90%88%2F</url>
    <content type="text"><![CDATA[layui与jquery-autocomplete 组合使用中的问题载入问题远程载入顺序1234567891011&lt;!-- 先jquery --&gt;&lt;script type="text/javascript" src="images/jquery.min.js"&gt;&lt;/script&gt;&lt;!-- layui --&gt;&lt;link rel="stylesheet" href="images/layui/css/layui.css"&gt;&lt;script type="text/javascript" src="images/layui/layui.all.js"&gt;&lt;/script&gt;&lt;!-- jquery插件 --&gt;&lt;script type="text/javascript" src="images/autocomplete/jquery.autocomplete.js"&gt;&lt;/script&gt;&lt;link href="https://cdn.bootcss.com/jquery-autocomplete/1.0.7/jquery.auto-complete.css" rel="stylesheet"&gt;layui-form表单12345&lt;!-- 文本框 --&gt;&lt;input name="card_sn" type="text" autocomplete="off" class="layui-input" lay-verify="required" placeholder="默认提示"/&gt;&lt;!-- 蓝色普通按钮 --&gt;&lt;button class="layui-btn layui-btn-normal" lay-filter="card_gen_form" lay-submit&gt;立即提交&lt;/button&gt;layui表单提交-ajax+msgbox提示123456789101112131415161718192021222324252627282930313233343536373839404142434445464748layui.use(['jquery', 'layer','laydate','form'], function()&#123; //日期选择 let laydate = layui.laydate; laydate.render(&#123; elem: '#start_date' //指定元素 &#125;); laydate.render(&#123; elem: '#end_date' //指定元素 &#125;); // jquery载入 let $ = layui.$ let Url = 'cards.php?rec=gen' let form = layui.form; // ajax提交，msgbox显示 form.on('submit(card_gen_form)', function(data)&#123; // layer.msg(JSON.stringify(data.field)); loading = layer.load(1, &#123; shade: [0.1, '#fff'] &#125;); let card_gen_config = JSON.stringify(data.field); $.ajax(&#123; type:"post", url:Url, data:card_gen_config, dataType:"json", success : function(data)&#123; // console.log(data.message); layer.close(loading); layer.msg( data.message,&#123; time: 2000 &#125;); return false; &#125;, error:function()&#123; &#125; &#125;); return false; &#125;);&#125;);jquery-autocomplete需要被layui调用中的修改问题打开jquery.autocomplete.js，修改其中的22行，将jquery调用改为用layui中的jquery调用方法修改代码如下123layui.use(['jquery'], function () &#123; factory(layui.jquery);&#125;);autocomplete插件与layui弹层问题冲突1234/*设定z-index置顶*/.ui-front &#123; z-index: 110000003;&#125;layui&amp;jquery-autocomplete组合调用1234567891011121314151617181920212223242526272829303132333435363738394041424344layui.use(['jquery','layer','form'], function()&#123; // 载入jquery let $=layui.jquery; $("[id='card_edit']").on("click",function()&#123; $('#user_info').val(''); // 弹框 let user_sel = layer.open(&#123; type: 1, title: '手机号&amp;姓名&amp;昵称', content: $('#user_sel') &#125;); // 设定高宽 layer.style(user_sel, &#123; width: '400px', height: '200px' &#125;); &#125;); // 文本框输入内容自动检索，每次检索都调用接口 $("#user_info").autocomplete(&#123; source: function( request, response ) &#123; $.ajax(&#123; url: "cards.php?rec=search", dataType: "json", type: "post", data:&#123; searchUserInfo: $("#user_info").val() &#125;, success:function(data)&#123; response(data); &#125; &#125;); &#125; &#125;);&#125;);]]></content>
      <categories>
        <category>前端</category>
      </categories>
      <tags>
        <tag>layui</tag>
        <tag>jquery</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[产业互联网 重新定义效率与消费 (Chinese Edition)]]></title>
    <url>%2F2019%2F08%2F05%2F%E4%BA%A7%E4%B8%9A%E4%BA%92%E8%81%94%E7%BD%91-%E9%87%8D%E6%96%B0%E5%AE%9A%E4%B9%89%E6%95%88%E7%8E%87%E4%B8%8E%E6%B6%88%E8%B4%B9-Chinese-Edition%2F</url>
    <content type="text"><![CDATA[标注 (黄色) - 位置 109在 消 费 互 联 网 的 后 期 ， 做 什 么 不 重 要 ， 重 要 的 是 谁 要 做 。 只 有 B A T （ 指 百 度 、 阿 里 巴 巴 、 腾 讯 ） 量 级 的 大 玩 家 参 与 角 逐 ， 一 个 行 业 或 垂 直 领 域 才 能 快 速 变 成 风 口 或 机 会 ； 而标注 (黄色) - 位置 116当 资 本 和 人 才 都 聚 焦 在 虚 拟 的 价 值 上 ， 数 以 百 万 计 的 互 联 网 团 队 簇 拥 在 小 的 难 以 呼 吸 的 一 小 块 土 地 上 重 复 建 设 着 ， 甚 至 构 建 的 是 一 堆 堆 根 本 没 有 实 际 产 值 的 泡 沫 ， 只 是 或 靠 历 史 红 利 续 命 ， 或 靠 资 本 市 场 的 投 机 者 输 血 。 那标注 (黄色) - 位置 119泡 沫 里 温 暖 、 熟 悉 、 高 收 入 、 高 美 誉 度 ， 而 泡 沫 外 很 可 能 意 味 着 陌 生 、 苦 难 、 波 折 性 和 不 确 定 性 。 百标注 (黄色) - 位置 121传 统 行 业 加 上 产 业 互 联 网 之 后 ， 却 正 在 变 成 未 来 。 现备注 - 位置 121需要深耕标注 (黄色) - 位置 130产 业 互 联 网 的 威 力 ， 一 是 来 自 产 业 自 身 的 刚 需 、 体 量 与 积 淀 ， 二 是 来 自 效 率 提 升 与 消 费 体 验 重 塑 给 企 业 带 来 的 质 变 ， 但备注 - 位置 131必须熟知业务上篇 黄金时代：产业互联网的时代标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 167产 业 互 联 网 ， 不 是 指 为 传 统 行 业 提 供 B 2 B （ B u s i n e s s t o B u s i n e s s ， 企 业 到 企 业 ） 信 息 化 服 务 的 工 具 或 平 台 ， 这 仅 仅 是 产 业 互 联 网 在 工 具 层 或 流 量 分 发 层 的 一 个 小 分 支 。 真备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 168从小做起深入行业标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 169产 业 自 身 发 展 的 新 阶 段 。 对 这 个 阶 段 ， 更 准 确 的 用 词 ， 应 该 是 “ 产 业 + 互 联 网 ” ， 简 称 产 业 互 联 网 。 所标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 178有 实 战 经 验 的 一 些 专 家 学 者 ， 会 尝 试 列 举 出 几 个 近 年 来 新 兴 的 、 聚 焦 于 传 统 行 业 产 业 链 服 务 和 上 下 游 打 通 的 网 站 平 台 ， 来 佐 证 产 业 互 联 网 的 世 界 观 和 方 法 论 。 比 如 ， 号 称 互 联 网 家 装 行 业 独 角 兽 的 “ 土 巴 兔 ” ， 比 如 专 注 于 钢 铁 行 业 B 2 B 电 商 服 务 的 “ 找 钢 网 ” 等 。 但备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 180还只是解决信息沟通问题标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 214如 果 说 消 费 互 联 网 致 力 于 消 费 者 个 体 的 虚 拟 化 ， 是 眼 球 经 济 和 流 量 经 济 ， 那 么 ， 产 业 互 联 网 则 致 力 于 企 业 的 虚 拟 化 ， 是 价 值 经 济 。 消标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 216产 业 互 联 网 区 别 于 消 费 互 联 网 ， 泛 指 以 生 产 者 为 服 务 对 象 （ 用 户 ） ， 以 生 产 活 动 为 应 用 产 经 的 互 联 网 应 用 ，标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 217体 现 在 互 联 网 对 各 产 业 的 生 产 、 交 易 、 融 资 、 流 通 等 各 个 环 节 的 改 造 、 升 级 、 能 源 节 约 和 效 率 提 升 。 产标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 218意 味 着 各 传 统 行 业 如 制 造 、 农 业 、 交 通 、 运 输 、 房 产 、 医 疗 、 教 育 、 家 居 等 的 互 联 网 化 。标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 221企 业 中 的 工 作 人 员 ， 供 应 链 上 的 合 作 伙 伴 。标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 222研 发 、 设 计 、 采 购 、 生 产 、 营 销 、 交 易 、 流 通 、 融 资 等 各 个 环 节 的 升 级 。标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 233产 业 互 联 网 ， 绝 不 仅 是 给 传 统 企 业 或 者 传 统 产 业 提 供 信 息 化 服 务 的 工 具 或 平 台 这 么 狭 小 。 因标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 236真 正 的 产 业 互 联 网 ， 指 的 就 是 进 化 之 后 的 传 统 产 业 ， 它 是 产 业 自 身 发 展 的 新 阶 段 。 对 这 个 阶 段 ， 更 准 确 的 用 词 ， 应 该 是 “ 产 业 + 互 联 网 ” ， 简 称 产 业 互 联 网 。 所标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 239关 键 的 助 攻 作 用 ”标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 252车 销 ” 加 上 互 联 网 ， 上 述 的 弊 病 就 全 部 迎 刃 而 解 了 。 比 如 在 一 款 叫 “ e 快 销 ” 的 车 销 工 具 A P P 当 中 ， 零 售 端 可 以 通 过 A P P 发 起 配 送 需 求 ， 并 有 系 统 级 大 数 据 提 供 的 预 测 依 据 。 而 车 销 人 员 则 通 过 销 售 端 的 A P P 来 记 录 每 一 家 零 售 端 的 供 货 、 结 算 情 况 ， 一 边 数 据 实 时 同 步 到 云 端 ， 一 边 蓝 牙 连 接 小 型 打 印 设 备 打 印 账 单 给 零 售 店 店 主 ， 实 现 移 动 数 字 办 公 。 当备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 255有机也可以这么做标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 256甚 至 ， 当 第 二 天 的 配 送 需 求 被 分 配 出 来 之 时 ， 系 统 可 以 根 据 地 图 计 算 出 最 合 理 的 配 送 路 线 推 荐 给 车 销 员标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 268进 化 之 后 的 装 修 企 业 （ 如 东 易 日 盛 等 ） ， 它 们 就 是 产 业 互 联 网 的 主 体 ； 而 土 巴 兔 只 是 为 这 些 传 统 装 修 公 司 进 化 提 供 辅 助 性 资 源 协 助 的 工 具 或 平 台 ， 辅 助 的 资 源 包 括 流 量 商 机 分 发 、 供 应 链 提 供 以 及 标 准 化 质 量 定 义 等标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 271经 过 “ + 互 联 网 ” 之 后 的 整 个 装 修 行 业 的 进 化 ， 是 在 4 万 亿 元 基 础 之 上 的 升 级 和 腾 飞 ， 这 个 产 业 互 联 网 的 本 体 ， 才 是 令 人 震 撼 和 期 待 的 。标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 274产 业 互 联 网 ， 是 产 业 ， 不 是 互 联 网 ， 至 少 不 是 传 统 意 义 上 的 互 联 网 。 所标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 280服 务 型 企 业 拥 抱 产 业 互 联 网 ， 就 可 以 实 现 现 代 化 升 级 ； 制 造 型 企 业 拥 抱 产 业 互 联 网 ， 就 可 以 实 现 智 能 制 造 升 级 ， 或 者 服 务 化 转 型 。备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 282最还是要回归传统实业标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 290企 业 的 生 产 侧 的 改 进 方 向 就 在 于 提 升 生 产 效 率 。 然标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 290传 统 企 业 的 产 业 互 联 网 升 级 ， 绝 不 等 同 于 提 升 效 率 这 么 简 单 ， 重 塑 消 费 体 验 也 是 同 等 重 要 的 必 备 转 型 要 素 。 否标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 293仅 包 含 以 提 升 效 率 为 目 的 的 产 业 端 升 级 ， 还 包 含 有 以 优 化 体 验 为 目 的 的 消 费 端 改 造 。 因标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 293消 费 者 是 产 业 的 有 机 组 成 部 分 ， 是 消 费 者 的 需 求 定 义 了 产 业 的 边 界 。标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 298提 升 效 率 + 重 塑 消 费 体 验 ” 。 尤标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 300消 费 体 验 的 升 级 以 及 线 上 引 流 转 化 ， 却 几 乎 是 所 有 企 业 的 刚 需 。 所标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 302整 个 商 业 环 境 正 在 从 供 给 侧 主 导 向 消 费 侧 主 导 转 型 ， 消 费 侧 有 能 力 向 生 产 侧 渗 透 。 而标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 305一 方 面 传 统 制 造 业 从 大 规 模 生 产 向 个 性 化 定 制 转 型 ， 也 就 是 现 在 常 说 的 C 2 B （ C u s t o m e r t o B u s i n e s s ， 即 消 费 者 到 企 业 ） 或 F 2 C （ F a c t o r y t o C u s t o m e r ， 即 从 厂 商 到 消 费 者 ） ； 另 一 方 面 ， 即 使 对 于 那 些 原 来 只 做 生 产 制 造 供 应 、 不 面 对 消 费 者 的 企 业 ， 面 对 中 国 经 济 新 常 态 的 局 面 以 及 产 业 互 联 网 的 机 遇 ， 也 存 在 “ 制 造 业 服 务 化 ” 的 转 型 机 遇 和 模 式 。标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 314一 个 原 先 做 代 工 的 工 厂 ， 就 变 成 了 基 于 消 费 升 级 、 产 业 互 联 网 背 景 下 的 服 务 业 。备注 - 01 第1章 产业互联网，究竟是什么 &gt; 位置 315蔬菜基地服务业标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 317从 传 统 的 工 厂 生 产 制 造 ， 转 向 “ 制 造 + 零 售 + 身 心 灵 教 育 ” 的 综 合 商 业 模 式 ， 通 过 用 户 购 买 产 品 的 消 费 额 来 定 义 会 员 的 分 级 ， 进 而 匹 配 后 市 场 的 身 心 灵 课 程 和 心 理 咨 询 服 务 ， 就 非 常 有 效 地 形 成 了 差 异 化 。 传 统 的 零 售 门 店 ， 现 在 既 是 销 售 场 所 ， 又 是 会 员 们 和 老 师 们 交 流 身 心 灵 课 程 和 心 得 的 轻 社 交 场 所 ； 传 统 的 产 品 销 售 ， 既 是 卖 产 品 ， 又 是 延 伸 达 到 会 员 条 件 之 后 的 免 费 课 程 学 习 。 这标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 324当 下 中 国 大 量 中 小 微 制 造 企 业 的 困 境 、 转 型 与 机 遇 。 它 们 没 有 华 为 、 海 尔 那 样 的 规 模 ， 无 法 从 智 能 制 造 、 财 务 信 息 化 、 “ 工 业 4 . 0 ” 等 维 度 去 实 现 产 业 互 联 网 化 ； 它 们 又 不 是 服 务 业 ， 在 转 型 之 前 更 多 的 只 是 纯 粹 的 供 应 链 中 的 一 个 环 节 ， 面 对 的 只 是 下 游 的 销 售 代 理 或 采 购 商 ， 甚 至 连 用 户 都 接 触 不 到 。 然 而 在 中 国 的 经 济 新 常 态 到 来 之 后 ， 供 给 侧 严 重 的 供 过 于 求 ， 于 是 ， 制 造 业 服 务 化 转 型 ， 就 成 为 了 一 部 分 企 业 自 我 突 破 、 自 我 救 赎 的 方 法 。标注 (黄色) - 01 第1章 产业互联网，究竟是什么 &gt; 位置 329趋 势 ， 提 升 效 率 与 重 塑 消 费 体 验 已 成 为 产 业 互 联 网 化 的 双 引 擎 。 这标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 341投 资 的 乏 力 ， 资 本 的 收 紧 ， 是 最 重 要 的 原 因 。 因标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 343新 兴 的 各 类 互 联 网 项 目 ， 几 乎 未 见 能 盈 利 的 ， 基 本 完 全 依 靠 资 本 市 场 的 资 金 在 驱 动 成 长 。 一 旦 找 不 到 接 盘 侠 ， 这 类 造 血 能 力 低 下 、 企 业 家 精 神 匮 乏 的 企 业 ， 直 接 就 面 临 崩 盘 。 而标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 350各 家 自 消 费 刷 单 、 自 己 给 自 己 抹 口 红 ， 进 而 制 造 泡 沫 、 吸 引 投 资 的 企 图 ， 已 然 变 成 了 一 种 阳 谋 。 这标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 358企 业 的 本 意 并 不 是 骗 局 ， 但 不 断 依 靠 新 的 接 盘 侠 输 血 进 入 、 老 的 接 盘 侠 套 现 退 出 来 维 持 企 业 运 营 的 模 式 ， 的 确 是 “ 庞 氏 ” 的 ， 如标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 363而 在 经 济 新 常 态 下 ， 资 本 预 冷 、 高 估 值 公 司 无 人 接 盘 、 企 业 无 力 建 构 正 向 现 金 流 商 业 模 式 ， 都标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 383证 明 了 “ 传 统 行 业 、 线 下 、 实 业 ” 和 “ 互 联 网 、 线 上 、 虚 拟 ” ， 绝 对 不 是 一 个 落 后 、 一 个 先 进 ， 一 个 过 去 、 一 个 未 来 的 关 系 ； 恰标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 434互 联 网 行 业 的 人 均 G D P ， 来 更 深 刻 地 反 思 互 联 网 行 业 的 现 状 。 2 0 1 5 年 ， 互 联 网 行 业 从 业 人 员 大 约 在 5 0 0 万 人 ， 并 且 以 每 年 1 5 0 万 人 的 速 度 增 加 。 由 于 互 联 网 全 行 业 的 年 收 入 总 额 是 6 0 0 0 亿 元 人 民 币 ， 所 以 ， 互 联 网 行 业 人 均 G D P 大 约 是 1 2 万 元 ，标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 438不 到 3 % 的 互 联 网 劳 动 力 ， 创 造 接 近 一 半 的 G D P 。 那 么 ， 非 B A T 剩 下 的 9 7 % 的 互 联 网 从 业 人 员 ， 其 人 均 G D P 是 多 少 呢 ？ 毫 无 疑 问 ， 远 低 于 其 所 在 城 市 的 人 均 G D P ，标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 459更 多 的 是 大 量 配 角 玩 家 。 这 些 配 角 玩 家 ， 本 身 是 没 有 独 立 商 业 模 式 的 ， 更 多 是 依 靠 附 着 在 “ B A T 们 ” 身 上 ， 形 成 一 层 套 一 层 的 复 杂 的 生 态 链 。备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 460bat占有了大量的互联网基础设施标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 482早 年 大 家 玩 的 是 搜 索 引 擎 的 网 盟 分 成 规 则 和 广 告 框 架 规 则 ， 而 现 在 玩 的 是 直 播 平 台 的 主 播 分 佣 规 则 而 已 。标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 500第 一 重 解 读 ， 只 有 不 到 5 % 的 网 大 能 盈 利 ， 供 给 侧 同 质 化 竞 争 激 烈 。 但 这 至 多 也 只 能 说 明 ， 中 国 最 经 典 的 “ 皮 鞋 村 ” 模 式 再 现 了 ， 这标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 518拿 去 广 告 和 影 视 剧 版 权 换 来 的 会 员 付 费 收 入 ， 来 支 付 给 网 大 ， 本 质 就 是 一 种 视 频 网 站 的 “ 贴 补 ” 行 为 ， 是 一 种 阶 段 性 的 政 策 ， 网 大 的 商 业 模 式 不 是 来 自 用 户 付 费 ， 而 是 平 台 贴 补 。标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 527从 企 业 资 本 估 值 建 设 的 角 度 ， 这 并 不 奇 怪 。 视 频 网 站 花 大 价 钱 购 买 影 视 剧 版 权 ， 既 不 被 资 本 市 场 看 好 ， 又 不 被 企 业 投 资 人 看 好 ， 一 直 是 被 质 疑 和 诟 病 的 痛 点 ， 并 被 认 为 是 入 不 敷 出 、 身 处 影 视 行 业 下 游 、 商 业 模 式 不 成 立 。 所 以 ， 要 让 视 频 网 站 这 个 模 式 在 资 本 市 场 不 断 提 升 估 值 ， 唯 有 打 造 出 P G C 这 样 的 网 络 创 新 模 式 。 于标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 551一 部 网 大 的 成 功 ， 主 要 来 源 三 个 要 点 ： 片 名 （ 蹭 热 点 ） 、 封 面 （ 诱 惑 ） 、 前 6 分 钟 试 看 （ 擦 边 球 ） 。 而标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 555投 资 界 、 行 业 、 媒 体 共 造 “ 风 口 ” 和 舆 论 导 向 ， 快 速 吸 引 下 一 轮 资 金 接 盘 ， 而 企 业 则 “ 顺 势 ” 制 造 、 包 装 数 据 。 众 人 皆 醉 从 而 在 表 象 上 快 速 营 造 出 一 个 巨 大 泡 沫 的 新 兴 市 场 和 风 口 市 场 ， 而标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 5575 % 的 金 字 塔 尖 的 企 业 竞 争 ， 在 一 个 阶 段 内 不 得 不 以 烧 钱 为 代 价 获 得 市 场 份 额 ， 那 么 ， 剩 下 9 5 % 的 塔 尖 之 外 的 部 分 ， 则 是 典 型 的 一 级 市 场 二 级 化 ， 也 就 是 目 标 非 常 明 确 的 炒 短 线 。 这 也 是 为 何 频 频 出 现 一 个 垂 直 细 分 的 互 联 网 分 支 领 域 ， 往 往 生 命 周 期 不 到 5 年 就 瞬 间 枯 萎 了 ： 2 年 入 场 （ 上 市 或 资 产 重 组 、 并 购 ） 、 3 年 解 锁 或 对 赌 完 成 。标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 560上 市 或 收 购 前 已 经 严 重 透 支 ， 锁 定 或 对 赌 期 完 成 业 绩 大 多 靠 自 消 费 或 过 桥 垫 资 冲 业 绩 。 到备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 561庞式标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 574首 先 是 用 户 的 拉 新 （ 引 流 ） 、 留 存 （ 注 册 ） 和 转 化 （ 付 费 ） 。 直标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 640中 国 经 济 用 三 十 多 年 的 时 间 ， 吃 光 了 人 口 红 利 ， 于 是 “ 新 常 态 ” 就 成 为 中 国 经 济 的 下 半 场 ； 互 联 网 的 人 口 红 利 吃 了 二 十 几 年 ， 也 吃 光 了 ， 互 联 网 公 司 的 发 展 不 得 不 从 追 求 速 度 和 规 模 ， 转 向 追 求 纵 深 和 创 新 ， 这 就 是 互 联 网 的 下 半 场 。 后标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 646玩 的 是 各 个 行 业 从 上 游 到 下 游 的 产 业 互 联 网 化 — — 提 升 体 验 、 提 高 效 率 、 降 低 成 本 。 这标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 648原 来 的 线 性 产 业 价 值 链 逐 渐 演 化 成 网 状 产 业 生 态 圈 ？ 如 何 进 化 为 一 个 以 用 户 为 中 心 的 、 实 时 高 效 协 同 的 产 业 生 态 网 络 ？ 在标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 655平 台 的 本 质 ， 是 流 量 的 生 意 。备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 655中介生意标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 656消 费 互 联 网 时 代 的 平 台 ， 更 多 是 通 过 早 期 蓝 海 市 场 时 期 切 入 用 户 的 底 层 刚 需 ， 进 而 吸 附 海 量 的 用 户 。 在 此 基 础 上 ， 制 定 流 量 分 发 的 规 则 ， 将 用 户 分 发 到 具 体 提 供 服 务 的 应 用 当 中 去 ， 并 通 过 流 量 分 发 获 取 商 业 收 入 。 当标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 664次 平 台 ， 指 的 是 垂 直 于 各 个 产 业 的 分 类 流 量 聚 合 平 台 。 比标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 666在 消 费 互 联 网 的 发 展 过 程 中 ， 大 的 平 台 借 力 资 本 及 流 量 分 发 优 势 ， 会 进 驻 垂 直 行 业 领 域 ， 以 控 股 、 参 股 或 直 营 的 方 式 进 入 应 用 层 ， 比标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 680平 台 不 是 “ 人 文 景 观 ” ， 更 多 知 识 “ 自 然 景 观 ” 。 所 谓 自 然 景 观 ， 指 的 是 平 台 的 诞 生 ， 是 在 特 定 时 期 ， 由 于 一 定 的 偶 发 性 ， 在 人 口 红 利 、 蓝 海 环 境 等 多 重 因 素 下 而 自 然 形 成 的 。 这标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 684只 有 一 个 趋 势 和 一 个 产 品 理 念 ， 要 做 到 平 台 的 规 模 ， 则 至 少 要 几 十 亿 到 百 亿 元 级 别 的 烧 钱 亏 损 打 底 。 所标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 689流 量 买 入 和 卖 出 几 乎 无 法 形 成 差 价 ， 信 息 不 对 称 的 市 场 机 会 和 红 利 已 经 不 复 存 在 ； 而 绝 对 刚 需 基 本 是 伪 命 题 ， 只 有 相 对 刚 需 可 能 还 存 在 ， 但 相 对 刚 需 的 留 存 能 力 不 足 ， 或 用 户 覆 盖 面 不 足 ， 导 致 留 存 远 达 不 到 正 循 环 条 件 ， 故 而 难 以 形 成 商 业 模 型 。 其 次 ， 常 见 的 补 贴 模 式 是 通 过 烧 钱 获 取 C 端 用 户 ， 但 由 于 C 端 用 户 的 无 忠 诚 性 及 利 益 驱 动 性 ， 几 乎 没 有 沉 淀 价 值 ； 而 2 B 端 的 烧 钱 ， 在 绝 大 部 分 行 业 不 奏 效 ， 或 根 本 没 有 达 到 条 件 的 B 端 的 存 在 。 综标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 697今 天 ， 唱 片 、 平 面 媒 体 甚 至 纸 质 图 书 ， 都 已 经 萎 缩 到 了 一 个 极 窄 的 小 众 范 畴 内 ， 取 而 代 之 的 是 数 字 音 乐 、 网 络 媒 体 、 自 媒 体 和 电 子 图 书 等 。 然 而 ， 时 间 跨 越 到 最 近 1 0 年 ， 取 而 代 之 的 “ 取 代 逻 辑 ” 失 效 了 ， “ 并 行 逻 辑 ” 出 现 了 。 P标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 701娱 乐 消 费 需 求 总 量 受 到 经 济 新 常 态 的 长 期 影 响 ， 远 远 跟 不 上 供 给 侧 并 行 逻 辑 下 的 供 过 于 求 的 红 海 增 长 。 可标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 702在 严 重 供 过 于 求 的 环 境 中 ， 以 “ 消 耗 时 间 ” 为 必 要 条 件 的 泛 娱 乐 消 费 选 择 ， 势 必 造 成 每 个 娱 乐 服 务 能 分 到 的 需 求 量 更 少 。 而标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 713被 动 解 构 ， 打 散 变 成 了 N 多 家 的 小 微 企 业 。 过 去 的 一 个 冰 箱 是 家 用 电 器 ， 未 来 的 冰 箱 变 成 了 家 庭 膳 食 的 管 理 工 具 — — 通 过 传 感 器 和 物 联 网 ， 它 可 以 知 道 你 的 每 一 件 食 品 是 否 过 期 ， 提 醒 你 是 否 需 要 补 充 ， 以 及 根 据 存 储 的 菜 品 推 送 对 应 菜 单 做 法 — — 整 个 商 业 模 式 都 发 生 变 化 了 。备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 716分布式 颗粒化标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 738传 统 产 业 + 互 联 网 ， 传 统 实 业 进 化 成 新 实 业 ， 消 费 互 联 网 针 对 新 实 业 释 放 资 源 和 人 才 ， 这 是 必 然 趋 势 ， 也 是 唯 一 的 钥 匙 。 这备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 739新机会标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 741产 业 互 联 网 化 下 的 新 一 代 的 传 统 产 业 ， 或 者 叫 新 实 业 ， 不 靠 资 本 驱 动 过 活 ， 更 关 注 内 生 增 长 的 造 血 功 能 、 自 由 现 金 流 和 利 润 。 它 的 核 心 特 征 是 O 2 O ， 也 就 是 线 上 线 下 一 体 化 运 营 。标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 745从 “ 频 次 ” “ 顺 序 ” “ 产 品 ” “ 特 征 ” “ 体 量 ” 五 个 维 度 来 解 读 ， 如标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 757高 频 业 务 做 留 存 ， 中 低 频 业 务 做 转 化 增 强 ” ， 如 图 2 1 5 所 示 。 高 频 业 务 ， 比 如 餐 饮 、 外 卖 、 零 售 、 城 市 出 行 、 家 政 、 金 融 等 ， 做 留 存 就 是 用 互 联 网 平 台 或 工 具 把 用 户 锁 定 在 自 己 的 客 户 端 上 ， 促 进 高 频 次 的 使 用 进 而 获 取 商 业 价 值 。 这备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 758会员服务标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 760中 低 频 业 务 ， 比 如 房 产 、 汽 车 、 婚 嫁 、 母 婴 、 装 修 、 家 居 、 教 育 、 医 疗 、 旅 游 等 ， 互 联 网 首 先 要 做 的 ， 就 是 “ 转 化 增 强 ” 。 传标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 761线 上 引 流 是 最 重 要 的 渠 道 之 一 。 而 精 细 化 运 营 和 数 据 漏 斗 管 理 ， 则 是 转 化 增 强 的 第 一 步 ， 也 就 是 从 展 现 率 、 点 击 率 、 网 电 转 化 率 、 邀 约 率 、 到 访 率 、 成 交 率 六 大 关 键 用 户 漏 斗 节 点 ， 进 行 精 细 化 运 营 。 这标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 763转 化 增 强 还 包 括 提 供 互 联 网 工 具 ， 辅 助 关 键 角 色 进 行 “ 人 肉 干 预 ” ， 从 而 增 强 商 机 分 配 的 合 理 性 和 效 率 优 先 ， 进 而 增 强 商 业 转 化 率 ， 这标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 766可 以 有 一 套 用 户 画 像 的 C R M （ 客 户 关 系 管 理 ） 系 统 ， 以 及 一 套 用 于 记 录 房 产 经 纪 人 综 合 能 力 的 经 纪 人 评 价 体 系 系 统 ， 再 辅 以 一 套 商 机 分 配 规 则 ， 这备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 767转换成有机食品标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 768人 员 在 接 听 过 程 中 完 成 了 用 户 画 像 的 勾 选 ， 比 如 意 向 区 域 、 资 金 预 算 、 户 型 要 求 等 。 对 这 些 关 键 数 据 标 准 化 ， 客 服 人 员 在 C R M 系 统 里 确 认 之 后 ， 系 统 会 根 据 商 机 分 配 规 则 ， 从 经 纪 人 评 价 体 系 系 统 当 中 选 择 出 最 适 合 服 务 这 个 需 求 的 经 纪 人 ， 并 将 这 个 商 机 推 送 到 该 经 纪 人 的 手 机 A P P 上 。 这备注 - 02 第2章 产业互联网VS消费互联网 &gt; 位置 770转换成销售访问标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 773大 数 据 的 核 心 算 法 之 下 ， 哪 个 经 纪 人 更 适 合 服 务 这 个 需 求 ， 很 可 能 和 店 长 的 个 人 直 觉 选 择 是 不 同 的 结 果 。 再标注 (黄色) - 02 第2章 产业互联网VS消费互联网 &gt; 位置 805给 设 计 师 提 供 网 络 版 的 设 计 工 具 和 供 应 链 工 具 ， 便 于 他 和 用 户 阐 述 设 计 方 案 和 效 果 的 时 候 ， 实 时 地 根 据 用 户 需 求 替 换 物 件 、 实 时 呈 现 3 D 效 果 以 及 最 终 报 价 。 这]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[docker环境配置nginx-php-mysql]]></title>
    <url>%2F2019%2F07%2F17%2Fdocker-nginx-php-mysql%2F</url>
    <content type="text"><![CDATA[安装前准备Nginx配置MySQL配置PHP配置环境能够运行docker的主机安装前准备安装docker-ce版本修改docker仓亏，增加阿里云的配置123456789101112131415#mac中的配置&#123; "debug" : true, "experimental" : false, "registry-mirrors" : [ "https://x7e3y83k.mirror.aliyuncs.com" ]&#125;#ubuntu linux中的配置&#123; "registry-mirrors": ["https://x7e3y83k.mirror.aliyuncs.com"]&#125;配置文件&amp;数据目录确认12345678910111213141516171819202122232425#配置文件/server├── mysql│ ├── conf│ └── logs├── nginx│ ├── cert│ ├── conf│ ├── logs│ └── nginx.conf├── php│ ├── conf #包含了php.ini 和 fpm配置文件www.conf#数据目录/data├── logs│ ├── nginx├── mysql│ ├── data│ ├── logs└── mysql_bak ├── dataNginx配置123456789101112131415 docker pull nginx:stable #下载nginx的稳定版镜像 #准备事先准备的default.conf docker run -d -p 80:80 -p 443:443 \--name nginx-stable \-v /server/nginx/conf:/etc/nginx/conf.d \-v /server/nginx/nginx.conf:/etc/nginx/nginx.conf \-v /server/nginx/cert:/etc/ssl/certs \--link php5:php \-v /www:/www \-v /data/logs/nginx:/var/log/nginx \nginx:stable # 映射了默认的nginx.conf和默认的配置文件目录MySQL配置123456789 #预先拷贝my.cnf至/server/mysql/conf///初始化设置密码docker run -d -e MYSQL_ROOT_PASSWORD=123456 \--name mysql \-v /server/mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf \-v /data/mysql/data:/var/lib/mysql \-v /data/mysql/logs:/logs \-p 3306:3306 mysql:5.7PHP配置1234567891011121314151617181920212223242526272829docker run -d -p 9000:9000 --name php5 \-v /opt/workspace:/www \-v /server/php/conf/php.ini:/usr/local/etc/php/php.ini \-v /server/php/conf/www.conf:/usr/local/etc/php-fpm.d/www.conf \-v /tmp:/tmp \--link mysql:mysql \php:5-fpm#如果软件版本问题，请用 apt-get install libpcre3=2:8.35-3.3+deb8u4(安装特定的版本号) #将配置文件拷贝致docker中docker cp php.ini php5:/usr/local/etc/php/php.ini#运行php5.sh 将需要的gd库和mysql插件安装#安装xdebug和redis#进入容器 apt-get update \&amp;&amp; apt-get install -y \ libfreetype6-dev \ libjpeg62-turbo-dev \ libmcrypt-dev \ libpng-dev \pecl search xdebug-版本号pecl install redis-版本号docker-php-ext-enable redis xdebug]]></content>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[tp5-nginx配置]]></title>
    <url>%2F2019%2F06%2F04%2Ftp5-nginx%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[做项目要弄一个微信管理系统，涉及到tp5，为了pathinfo问题改了好久的配置。耽误了不少的功夫。当然其中也有项目的因素，更加坚定了之前的想法。废话不说，适应tp的配置如下：1234567891011121314151617181920212223242526server &#123; listen 80; root /www/rhaphp; index index.php index.html index.htm index.nginx-debian.html; server_name rhaphp.localhost; location / &#123; index index.php index.html index.htm; try_files $uri /index.php$uri; if (!-e $request_filename) &#123; #rewrite ^/(.*)$ /index.php?$1 last; rewrite ^(.*)$ /index.php?s=$1 last; break; &#125; client_max_body_size 50m; &#125; location ~ \.php(.*)$ &#123; fastcgi_pass php:9000; fastcgi_index index.php; fastcgi_split_path_info ^(.+\.php)(.*)$; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; fastcgi_param PATH_INFO $fastcgi_path_info; include fastcgi_params; &#125;&#125;]]></content>
      <categories>
        <category>运维</category>
      </categories>
      <tags>
        <tag>thinkphp5</tag>
        <tag>nginx</tag>
        <tag>rhaphp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[群晖SPK打包]]></title>
    <url>%2F2019%2F05%2F29%2F%E7%BE%A4%E6%99%96SPK%E6%89%93%E5%8C%85%2F</url>
    <content type="text"><![CDATA[12345678910111213#获得环境编译包git clone https://github.com/SynologyOpenSource/pkgscripts-ng.git pkgscripts#创建编译环境cd pkgscripts/./EnvDeploy -v 6.2 -p x64#测试包cd /toolkit/source/git clone https://github.com/SynologyOpenSource/minimalPkg.git#编译测试包pkgscripts/PkgCreate.py -x0 -c minimalPkg -p x64]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>群晖</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[moon river 月亮河]]></title>
    <url>%2F2019%2F05%2F28%2Fmoon-river-%E6%9C%88%E4%BA%AE%E6%B2%B3%2F</url>
    <content type="text"><![CDATA[月亮河（数字为吹 前面加扛得为吸）6 -8 7 -7 -6 6 -5 6Moon Riv-er, wid-er than a mile4 -7 -6 6 -5 6 4 -4I’m cross-in’ you in style some day.5 4 6 5 -4 4 6 5Old dream mak-er, you heart break-er-4 4 5 6 7 -7Wher-ev-er you’re go-in’-6 -7 -6 6 -6I’m go-in’ your way.6 -8 7 -7 -6 6 -5 6Two drift-ers, off to see the world.4 -7 -6 6 -5 6 4 -4There’s such a lot of world to see.5 4 5 6 7 -8 7 6We’re af-ter the same rain-bow’s end.-7 -6 6 -5 6wait-in’ ‘round the bend,4 -7 -6 6 -5 6my Huck-le-ber-ry friend,4 -5 -4 5 4Moon Riv-er and me.]]></content>
      <categories>
        <category>口琴</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[virtualbox Linux下搭建黑群晖开发环境]]></title>
    <url>%2F2019%2F05%2F24%2Fvirtualbox-%E5%BC%80%E5%8F%91%E6%9C%BA%E5%99%A8-%E6%90%AD%E5%BB%BA%E7%BE%A4%E6%99%96%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[环境安装vbox虚拟机配置黑群晖的磁盘镜像安装安装群晖系统ubuntu部署vbox虚拟机安装linux版vbox注册虚拟机虚拟机环境信息更改软件环境运行virtualbox(简称vbox)环境主机 Ubuntu linux 16.04群晖开发环境搭建机 osx环境安装vbox虚拟机配置osx本地建立vbox虚拟机，建立4个磁盘1个ide用来装ubuntu1个scsci用来装群晖系统 /dev/sdb2个scsi用来装群晖数据盘黑群晖的磁盘镜像安装12345#下载镜像wget http://down.nas2x.com/synology/dsm/6.2/6.2.0/ds3617_6.2/synoboot.img#vbox中dd镜像到群晖系统盘dd if=synoboot.img of=/dev/sdb重启系统，并用群晖系统盘启动此时选择第一项即可，当出现下面这样的图片表示系统启动成功安装群晖系统12345#下载系统文件wget http://down.nas2x.com/synology/dsm/6.2/6.2.0/ds3617_6.2/DSM_DS3617xs_23739.pat#下载群晖工具（Synology Assistant）https://www.synology.cn/zh-cn/support/download/DS3617xs#utilities修改发现的虚拟机mac地址重启该虚拟机，再次用群晖助手搜索登陆网页版安装安装过程会格式化所有的虚拟磁盘，安装完后会自动重启ubuntu部署vbox虚拟机安装linux版vbox123456789101112 sudo sh -c 'echo "deb http://download.virtualbox.org/virtualbox/debian $(lsb_release -sc) contrib" &gt;&gt; /etc/apt/sources.list.d/virtualbox.list' wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add - wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add - apt-get install virtualbox-6.0 #安装扩展包wget http://download.virtualbox.org/virtualbox/6.0.8/Oracle_VM_VirtualBox_Extension_Pack-6.0.8-130520.vbox-extpack VBoxManage expack install ./Oracle_VM_VirtualBox_Extension_Pack-6.0.8-130520.vbox-extpack注册虚拟机1vboxmanage registervm /vms/syno/syno.vbox修改数据磁盘大小容量12345678vboxmanage modifyhd a81abcee-823e-4bd1-9964-e8de3460d7dd --resize 10248#修改网卡信息#不同的机器的对应网卡是不同，需要修改VBoxManage modifyvm syno --nic1 bridged --nictype1 82540EM --cableconnected1 on --bridgeadapter1 p2p1#无界面启动虚拟机vboxmanage startvm syno --type=headless]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>虚拟机</tag>
        <tag>virtualbox</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo搜索安装]]></title>
    <url>%2F2019%2F05%2F16%2Fhexo%E6%90%9C%E7%B4%A2%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[安装分为2个部分hexo搜索插件安装，没有使用第三方的平台，而是使用一个local search的方式，正好主题也支持这么搜索123456789101112cd blog/npm install hexo-generator-searchdb --save# 编辑hexo的_config.ymlvim _config.xml# 在结尾处增加如下配置,其实就是搜索xml的js方式。(- -)search: path: search.xml field: post format: html limit: 10000主题部分开启搜索1234cd blog/theme/next/vim _config.xml搜索local_search关键字，将enable改为true完成]]></content>
  </entry>
  <entry>
    <title><![CDATA[hexo二级菜单修改]]></title>
    <url>%2F2019%2F05%2F15%2Fhexo%E4%BA%8C%E7%BA%A7%E8%8F%9C%E5%8D%95%E4%BF%AE%E6%94%B9%2F</url>
    <content type="text"><![CDATA[next主题是我目前常用的主题,官方文档只是说了一级目录，但是二级怎么改似乎文档中没有提及。next主题整体目录结构比较多，改页面结构只是用到layout目录中的对应文件12cd blog/vim themes/next/layout/_macro/menu/menu-item.swig在改之前先确认一个概念，hexo中我认为所谓的分类，其实就是二级目录，所以是否是分类就通过目录层级判断，以这个为核心概念，只要判断目录层级就好。修改后：123456789101112131415161718192021222324252627282930313233&#123;% macro render(name, value) %&#125;&#123;% import 'menu-badge.swig' as menu_badge %&#125; &#123;% set itemURL = value.split('||')[0] | trim %&#125; &#123;% if itemURL.indexOf('http') != 0 %&#125; &#123;% set itemURL = itemURL | replace('//', '/', 'g') %&#125; &#123;% endif %&#125; &lt;li class="menu-item menu-item-&#123;&#123; itemName | replace(' ', '-', 'g') &#125;&#125;&#123;&#123; item_active(itemURL, 'menu-item-active') &#125;&#125;"&gt; &#123;% set menuText = __('menu.' + name) | replace('menu.', '') %&#125; &#123;% set menuURL = itemURL %&#125; &#123;% if theme.menu_settings.icons %&#125; &#123;% set menuIcon = '&lt;i class="menu-item-icon fa fa-fw fa-' + value.split('||')[1] | trim | default('question-circle') + '"&gt;&lt;/i&gt; &lt;br/&gt;' %&#125; &#123;% endif %&#125; &#123;% if theme.menu_settings.badges %&#125; &#123;% set menuBadge = menu_badge.render(name) | trim %&#125; &#123;% endif %&#125; &lt;!-- 判断是否为二级目录,增加自定义css --&gt; &#123;% set tmp = menuURL.split('/')[2] %&#125; &#123;% if tmp.length&gt;1 %&#125; &#123;&#123; next_url(menuURL, menuIcon + menuText + menuBadge, &#123;rel: 'section','class':'submenu-item'&#125;) &#125;&#125; &#123;% else %&#125; &#123;&#123; next_url(menuURL, menuIcon + menuText + menuBadge, &#123;rel: 'section'&#125;) &#125;&#125; &#123;% endif %&#125; &lt;!-- 判断是否为二级目录,增加自定义css --&gt; &lt;/li&gt;&#123;% endmacro %&#125;我们在判断层级目录是二级后，在next_url的样式参数中增加了一个自定义样式参数增加自定义css123456vim themes/next/source/css/_custom/custom.style# 修改增加新的css样式.submenu-item &#123; margin-left: 10%;&#125;修改主题配置文件12345678910vim theme/next/_config.yml# 寻找menu部分,增加二级菜单menu: home: / || home about: /about/ || user tags: /tags/ || tags categories: /categories/ || th 学习笔记: /categories/学习笔记/ || book #二级菜单完成后记得重新生成静态文件，否则自定义css文件不会被合并入main.css的主题css文件中12hexo cleanhexo g -d]]></content>
      <categories>
        <category>Hexo修改笔记</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[git教程资料]]></title>
    <url>%2F2019%2F05%2F13%2Fgit%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[git工作流程多人协作，做产品用的上github markdown语法总容易忘记弄个备查]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[一些学习JS的资料地址]]></title>
    <url>%2F2019%2F05%2F13%2F%E4%B8%80%E4%BA%9B%E5%AD%A6%E4%B9%A0JS%E7%9A%84%E8%B5%84%E6%96%99%E5%9C%B0%E5%9D%80%2F</url>
    <content type="text"><![CDATA[ES6语法入门教程es6的入门教程，涵盖了语言的大部分方面，都是一些入门知识，要更深入。只能将知识点一个个搜索更细节的东西，光入门是够了。javascript全栈教程感觉这本更泛，作为走马观花不错，可以了解各个知识点。拥抱Generator，告别异步回调更详细的说明generator更強大的非同步模式：從Generator到Async Await学了es6的generator、promise，够用，但是async要学总要知道为啥。这个能说明为什么深入掌握 ECMAScript 6 异步编程异步编程众所纷纭，总是太多名词，这篇相对简单，先从弄清楚名词说起深入理解ES6异步编程相对更简单的说明小议async/await和coroutinejs异步协程开发的几种常见方式的说明]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Hexo安装过程]]></title>
    <url>%2F2019%2F05%2F11%2FHexo%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[这里做个记录，安装&amp;github配置部分内容参考网络上，theme部分按照个人的所找的theme配置吧。但一些基本的皮肤配置文件还是相同。安装hexogithub设置常用设置常用命令扩展包配置主题安装安装hexo12345678910111213141516171819# 全局安装hexo命令行包npm install -g hexo-cli# 建立hexo博客项目，会从远程获取一份hexo的代码并建立一个设定的目录，hexo init blogcd blog/npm init --yes 建立package.json为了后面安装扩展包准备npm install hexo-deployer-git --save #安装推送命令#此时本地已经有一个blog目录,标准的结构├── _config.yml #配置文件├── node_modules├── package-lock.json├── package.json├── scaffolds├── source #生成的markdown文件,域名映射文件，自定义目录配置└── themes #主题github配置登录到GitHub,如果没有GitHub帐号，使用你的邮箱注册GitHub帐号，点击GitHub中的New repository创建新仓库，仓库名应该为：注册用户名.github.io 这个用户名使用你的GitHub帐号名称代替，这是固定写法。因为只有这样才能确保 注册用户名.github.io 访问到对应的仓库.例如本日志的仓库配置增加自己的域名别名（非必须）不是每个人都想用github.io后缀，这年代大家都想个性化，用自己的域名，比如我就用blog.all-soon.com.github也支持这样的配置。如图，在仓库的这部分增加别名的配置配置后，请去自己的域名的dns配置中，将该域名指向 注册用户名.github.io 这个域名，这样才能确保生效.hexo常用设置做完github配置后，对应的二级域名也已经出现，现在可以对hexo做常规的配置12345678910111213141516171819202122# 基础配置,将本地与github链接# 编辑_config.yml # 修改下面这些信息title: 博客名subtitle: 子标题description: #seo所用部分keywords:author: language: zh-CN #默认语言timezone: Asia/Shanghai #所在时区url: http://注册用户名.github.io #对应github上的配置# 推送（我这里用的ssh方式，你也可以用http方式deploy: type: git repo: git@github.com:注册用户名/blog.git branch: masterhexo常用命令123456hexo g == hexo generate #生成hexo s == hexo server #启动服务预览hexo d == hexo deploy #部署hexo clean #清除缓存#hexo s 启动后，我们可以通过http://localhost:4000这个地址访问网页扩展包配置RSS配置通过rss，可以让别人轻松收藏你的站点，并定时更新更新站点内容，而不是每次都要用游览器访问。在资讯泛滥的年代，我们越来越受到来自网络噪音，而订阅rss则是个不错的方式，关注自己想要的，而不是被动的接受推送。12#进入hexo安装目录npm install hexo-generator-feed --save内容发布后台hexo通过命令生成文件，按照md语法编写文件，推送仓库这个方式来发布内容。每次都是通过命令行总是太乏味。安装内容发布后台就是个不错的方式。1npm install hexo-admin --save安装后通过hexo s 启动本地预览博客后，就可以在http://localhost:4000/admin 路径下获得内容管理。主题安装hexo官方有非常多的主题可以使用。hexo目录中有个theme目录，安装主题通过git主题的仓库中的代码同步到本地theme目录下。安装举例1234567git clone https://github.com/theme-next/hexo-theme-next themes/next#修改本地配置文件，将主题设置vim _config.ymltheme: next]]></content>
  </entry>
  <entry>
    <title><![CDATA[Generator的一些想法]]></title>
    <url>%2F2019%2F05%2F10%2FGenerator%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95%2F</url>
    <content type="text"><![CDATA[Generator 看了一下午，想明白了就是一个能存储当前某一刹那状态的函数12345678910111213141516//特殊的函数用*标记function* fn5()&#123; var x=1; while(x) &#123; yield(x++); &#125;&#125;//定义后，每次next()会再yield之前运行停止,下一次调用就从yield后运行至下一个yield之前var c = fn5();console.log(c.next().value); // 1console.log(c.next().value); // 2console.log(c.next().value); // 3可以用这种暂停作为异步的执行，当异步执行时候暂停，等到异步停止后，用next()继续执行结合之前的Promise，可以在异步中这样执行。建立一个Promise，并设定resolve和reject函数yield停在Promise实例对象前实例化yield相关的函数，执行next，然后value中返回的实例化的promise中执行操作具体代码:123456789101112131415161718192021222324252627282930/** * Generator+ Promise组合 */var url = "'http://httpbin.org/get'";var test = url=&gt; &#123; return new Promise(function(resolve,reject)&#123; request( url, function(err, response, body)&#123; if(!err &amp;&amp; response.statusCode == 200) &#123; resolve(body); &#125;else &#123; reject(err); &#125; &#125; ); &#125;);&#125;var fh7 = function* () &#123; let result = yield test('http://httpbin.org/get');&#125;var e = fh7();var p = e.next().value;p.then((data)=&gt;&#123; console.log(data);&#125;);]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>异步执行</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[对于学习目前的一些想法-想到什么说什么。]]></title>
    <url>%2F2019%2F05%2F09%2F%E5%AF%B9%E4%BA%8E%E5%AD%A6%E4%B9%A0%E7%9B%AE%E5%89%8D%E7%9A%84%E4%B8%80%E4%BA%9B%E6%83%B3%E6%B3%95%2F</url>
    <content type="text"><![CDATA[学习都是从碎片开始，目前学的语言都是从主干部分，现在学，慢慢再丰富枝干部分。边学边做，以完成任务的为学习目的，然后再基于主干的知识，根据手册资料，慢慢扩展。]]></content>
  </entry>
  <entry>
    <title><![CDATA[promise用法]]></title>
    <url>%2F2019%2F05%2F09%2Fpromise%E7%94%A8%E6%B3%95%2F</url>
    <content type="text"><![CDATA[原本层层嵌套改为多个then和catch连写的方式123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263var request = require('request');var url = "'http://httpbin.org/get'";function test(url) &#123; // 语法检查 "use strict"; return new Promise(function(resolve,reject)&#123; request( url, function(err, response, body)&#123; if(!err &amp;&amp; response.statusCode == 200) &#123; resolve(body); &#125;else &#123; reject(err); &#125; &#125; ); &#125;);&#125;test('http://httpbin.org/get') .then(function(value)&#123; return value; &#125;) .then(function(value)&#123; // console.log(22222); // console.log(value); &#125;) .catch(function(value)&#123; &#125;);//语法糖方式var prom = Promise.resolve( //返回的是promise对象，这里远程get方式无法调用 request(url,function(err, response, body)&#123;&#125;));prom.then(function(value)&#123; // console.log(value.uri);&#125;);// 只要抛错误就直接调用catchfunction task1() &#123; console.log('task1'); throw new Error('error test');&#125;function task2() &#123; console.log('task2');&#125;function err() &#123; console.log('err');&#125;var prom = Promise.resolve('aaaaa');// prom.then(task1).then(task2).catch(err);]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>es6</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[npm 使用]]></title>
    <url>%2F2019%2F05%2F09%2Fnpm-%E5%AE%89%E8%A3%85%E5%BA%93%2F</url>
    <content type="text"><![CDATA[https://www.npmjs.com/中搜索安装一些第三方库1234567891011//本地安装，安装到项目目录下，不在package.json中写入依赖npm install packageName//全局安装，安装在Node安装目录下的node_modules下npm install packageName -g//安装到项目目录下，并在package.json文件的dependencies中写入依赖，简写为-Snpm install packageName --save//安装到项目目录下，并在package.json文件的devDependencies中写入依赖，简写为-Dnpm install packageName --save-dev目前一般只是用 –save版本安装后引入12var 变量名称 = require('类库名称');]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[我的nodejs配置]]></title>
    <url>%2F2019%2F05%2F09%2F%E6%88%91%E7%9A%84nodejs%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[涵盖了基本安装+sublime的配置nvm、npm、node环境安装基本都是老生常谈的内容，主要还是用cnpm、cnvm等，用国内的阿里的源安装。之前尝试了brew安装方式。但发现nvm默认是没有安装，再弄也比较麻烦。正好有需要学习一下，就uninstall完直接安装了。1234567891011121314151617# 官网直接安装curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash\n# 切换国内源vim ~/.zshrc# 增加npm源export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node# 增加npm别名，当然也可以用阿里源的直接安装alias cnpm="npm --registry=https://registry.npm.taobao.org \ --cache=$HOME/.npm/.cache/cnpm \ --disturl=https://npm.taobao.org/dist \ --userconfig=$HOME/.cnpmrc"sublime 配置主要用到的Nodejs、JSHint Gutter 2个插件。Nodejs用来build代码，也就是command+b用到那个。JSHint则用来语法的校验。nodejs build 安装command+shift+p,搜索nodejs安装package setting-&gt;settings-User设置node和npm的位置，如果不知道那个位置可以用which npm来确认1234&#123; &quot;node_command&quot;: &quot;/Users/mini/.nvm/versions/node/v12.2.0/bin/node&quot;, &quot;npm_command&quot;: &quot;/Users/mini/.nvm/versions/node/v12.2.0/bin/npm&quot;&#125;jshint插件jshint 有点像python的中的书写规范，通过修改配置可以设定不同的书写规范并加以校验1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950# 安装npm install -g jshintcommand+shift+p,搜索jshint gutter安装# 配置package setting-&gt;setting-options&#123; "node_path": &#123; "windows": "C:/Program Files/nodejs/node.exe", "linux": "/usr/bin/nodejs", "osx": "/Users/mini/.nvm/versions/node/v12.2.0/bin/node" &#125;, "lint_on_edit": false, "lint_on_edit_timeout": 1, "lint_on_load": false, // 保存时检测 "lint_on_save": true, //高亮选中的部分 "highlight_selected_regions": true, // 通过`.jshintrc`.配置 "print_diagnostics": true&#125;package setting-&gt;line-code# 我改的不多几乎是用默认的，也是懒得折腾那么多。毕竟这个可以通过之后的学习在逐步理解。&#123; "browser": true, "esnext": true, "globals": &#123;&#125;, "strict": "global", "undef": true, "unused": true, //增加对es5的支持 "es5": true, "node": true,&#125;刚开始学我也不想枝节上扯太多，还是重点在语言本身，感觉和小程序的写法有相似的地方，不过也是，不都是js嘛 –!]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[从这里开始]]></title>
    <url>%2F2019%2F05%2F08%2Ftest-page%2F</url>
    <content type="text"><![CDATA[刚开始写希望有不错的开始，不太想用evernote的版本。如果不被墙，基本就选择这里。]]></content>
  </entry>
</search>
